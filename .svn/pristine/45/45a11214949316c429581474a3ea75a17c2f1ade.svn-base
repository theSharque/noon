<?php

  include( './pages/environment/planets.dic' );

  global $user;

  if( $user->place_type == 0 && isset( $_GET['x'] ) && isset( $_GET['cl'] ) && $user->owner ) {
    $planet_id = $user->place_id;
    $planet_type = db_fetch_val( "SELECT type FROM planets WHERE id = $planet_id", 'type' );

    $x = $_GET['x'];
    $y = 0;
    $last = $_GET['l'];

    db_safe( $x );
    db_safe( $last );

    if( isset( $_GET['cl'] ) ) {
      $cycle = abs( $_GET['cl'] );
    } else {
      $cycle = 1;
    }

    if( !$cycle ) {
      $cycle = 1;
    }

    $info = get_orbit_info( $x );

    if( $info->busy == 0 ) {

      $line = db_fetch_val( "SELECT lin FROM orbits_map WHERE id = $planet_id", 'lin' );
      if( $line ) {
    
        $bid = $info->building;

        if( $cycle > $info->level ) {
          $cycle = $info->level;
        }
/*    
        $test = db_fetch_val( "SELECT last FROM antibot WHERE coord = ".($y*30+$x)." AND user_id=".$user->uid, 'last' );
        if( $test != $last ) {
//          debug_it( 'Found mine bot from '.$user->login.' '.$_SERVER["QUERY_STRING"] );
          // return;
        }
*/
        $energy_av = get_energy();
        $warehouse = get_warehouse();

        if( $energy_av >= 0 && $warehouse > 0 ) {
          if( $info->building == 3006 ) {
            $total_time = get_mine_time( $bid );
            $total_count = get_mine_count( $bid, $planet_type );
            db_query( "INSERT INTO orbit_events ( event_type, x, planet_id, object_id, event_time, timer, user_id )
                                          VALUES ( 2, $x, $planet_id, $bid, DATE_ADD( NOW(), INTERVAL $total_time SECOND ), $total_time, {$user->uid} )" );
            $id = mysql_insert_id();
            if( isset( $_GET['robot'] ) && is_numeric( $_GET['robot'] ) && $_GET['robot'] == 1 ) {
              $rob = db_fetch_row( "SELECT id FROM robots r WHERE r.status = 0 AND r.user_id = ".$user->uid." AND
                                    r.usedtime = (SELECT MIN(usedtime) mintime FROM robots WHERE status = 0 AND user_id = ".$user->uid.")" );

              $build = db_fetch_row( "SELECT id FROM orbits_buildings WHERE x = $x AND planet_id = $planet_id AND object_id = $bid" );

              db_query( "UPDATE robots SET status = 1, build_id = ".$build['id'].", build_type = 0 WHERE id = ".$rob['id'] );

              switch( $planet_type ) {
                case 1:
                  db_query( "INSERT INTO orbits_mines ( event_id, res_id, res_cnt, cycle ) VALUES ( $id, 1030, $total_count, -1 )" );
                  break;
                case 2:
                  db_query( "INSERT INTO orbits_mines ( event_id, res_id, res_cnt, cycle ) VALUES ( $id, 1019, $total_count, -1 )" );
                  break;
                case 3:
                  db_query( "INSERT INTO orbits_mines ( event_id, res_id, res_cnt, cycle ) VALUES ( $id, 1010, $total_count, -1 )" );
                  break;
                case 4:
                  db_query( "INSERT INTO orbits_mines ( event_id, res_id, res_cnt, cycle ) VALUES ( $id, 1026, $total_count, -1 )" );
                  break;
              }
            } else {
              $planet_type = db_fetch_val( "SELECT type FROM planets WHERE id = $planet_id", 'type' );
              switch( $planet_type ) {
                case 1:
                  db_query( "INSERT INTO orbits_mines ( event_id, res_id, res_cnt, cycle ) VALUES ( $id, 1030, $total_count, $cycle )" );
                  break;
                case 2:
                  db_query( "INSERT INTO orbits_mines ( event_id, res_id, res_cnt, cycle ) VALUES ( $id, 1019, $total_count, $cycle )" );
                  break;
                case 3:
                  db_query( "INSERT INTO orbits_mines ( event_id, res_id, res_cnt, cycle ) VALUES ( $id, 1010, $total_count, $cycle )" );
                  break;
                case 4:
                  db_query( "INSERT INTO orbits_mines ( event_id, res_id, res_cnt, cycle ) VALUES ( $id, 1026, $total_count, $cycle )" );
                  break;
              }
            }
          }
        }
      }
    }
    printOut( "err=0" );
  } else {
    printOut( "err=1" );
  }

  if( $user->place_type == 1 && isset( $_GET['x'] ) && isset( $_GET['y'] ) && isset( $_GET['cl'] ) && $user->owner ) {
    $planet_id = $user->place_id;
    $planet_type = db_fetch_val( "SELECT type FROM planets WHERE id = $planet_id", 'type' );

    $x = $_GET['x'];
    $y = $_GET['y'];

    db_safe( $y );

    if( isset( $_GET['cl'] ) ) {
      $cycle = abs( $_GET['cl'] );
    }

    if( !$cycle ) {
      $cycle = 1;
    }

/*
    $last = $_GET['l'];
    db_safe( $last );
    $test = db_fetch_val( "SELECT last FROM antibot WHERE coord = ".($y*30+$x)." AND user_id=".$user->uid, 'last' );
    if( $test != $last ) {
//      debug_it( 'Found mine bot from '.$user->login.' '.$_SERVER["QUERY_STRING"] );
      // return;
    }
*/

    $info = get_planet_info( $x, $y );

    if( $info->busy == 0 ) {
      $content = array_map( 'trim', explode( "\n", trim( db_fetch_val( "SELECT top FROM planets_maps WHERE id = $planet_id", 'top' ) ) ) );
      if( $content ) {
    
        $bid = $info->building;

        if( $cycle > $info->level ) {
          $cycle = $info->level;
        }
    
        $energy_av = get_energy();
        $warehouse = get_warehouse();

        if( $energy_av >= 0 && $warehouse > 0 ) {
          if( $bid == 23 || $bid == 36 || $bid == 37 ) {
            $total_time = get_mine_time( $bid );
            $total_count = get_mine_count( $bid, $planet_type );
            db_query( "INSERT INTO planet_events ( event_type, x, y, planet_id, object_id, event_time, timer, user_id )
                                          VALUES ( 2, $x, $y, $planet_id, $bid, DATE_ADD( NOW(), INTERVAL $total_time SECOND ), $total_time, {$user->uid} )" );
            $id = mysql_insert_id();

            if( isset( $_GET['robot'] ) && is_numeric( $_GET['robot'] ) && $_GET['robot'] == 1 ) {
              $rob = db_fetch_row( "SELECT id FROM robots r WHERE r.status = 0 AND r.user_id = ".$user->uid." AND
                                    r.usedtime = (SELECT MIN(usedtime) mintime FROM robots WHERE status = 0 AND user_id = ".$user->uid.")" );

              $build = db_fetch_row( "SELECT id FROM planets_buildings WHERE x = $x AND y = $y AND planet_id = $planet_id AND object_id = $bid" );
              db_query( "UPDATE robots SET status = 1, build_id = ".$build['id'].", build_type = 1 WHERE id = ".$rob['id'] );
              $cycle = -1;
            }

            switch( $bid ) {

              case 23 :
                $content = array_map( 'trim', explode( "\n", trim( db_fetch_val( "SELECT top FROM planets_maps WHERE id = $planet_id", 'top' ) ) ) );
//                $content = array_map( 'trim', file( "./pages/environment/planets/$planet_id.top" ) );
                db_query( "INSERT INTO planets_mines ( event_id, res_id, res_cnt, cycle )
                                              VALUES ( $id,".$top_data[ $content[ $y ]{ $x } ][ 2 ].", $total_count, $cycle )" );
                break;

              case 36 :
                $content = array_map( 'trim', explode( "\n", trim( db_fetch_val( "SELECT mdl FROM planets_maps WHERE id = $planet_id", 'mdl' ) ) ) );
//                $content = array_map( 'trim', file( "./pages/environment/planets/$planet_id.mdl" ) );
                db_query( "INSERT INTO planets_mines ( event_id, res_id, res_cnt, cycle )
                                              VALUES ( $id,".$mdl_data[ $content[ $y ]{ $x } ][ 2 ].", $total_count, $cycle )" );
                break;

              case 37 :
                $content = array_map( 'trim', explode( "\n", trim( db_fetch_val( "SELECT btm FROM planets_maps WHERE id = $planet_id", 'btm' ) ) ) );
//                $content = array_map( 'trim', file( "./pages/environment/planets/$planet_id.btm" ) );
                db_query( "INSERT INTO planets_mines ( event_id, res_id, res_cnt, cycle )
                                              VALUES ( $id,".$btm_data[ $content[ $y ]{ $x } ][ 2 ].", $total_count, $cycle )" );
                break;
            }
          }
        }
      }
    }
    printOut( "err=0" );
  } else {
    printOut( "err=1" );
  }
