rd = 0, user_id = {$user->uid} WHERE fleet_id = $shid" );
              $fid = 'F'.$shid;
            }

            $out .= '&fid='.$fid;
          }
          break;

        case 26: // Set interupt all
          if( $test['place_type'] == 7 && $test['interupt'] == 1 ) {
            $inter = db_fetch_array( "SELECT event_type, ship_id, event_time FROM space_events WHERE event_type IN ( 4, 104 ) AND arg2 = ".$test['place_id'] );
            foreach( $inter as $item ) {
              switch( $item['event_type'] ) {
                case 4 :
                  $mass = db_fetch_val( "SELECT o.mass FROM ships s, ship_types st, objects o WHERE st.object_id = s.object_id AND st.conserv_id = o.id AND s.id = ".$item['ship_id'], 'mass' );
                  send_msg( 1, $user->uid, "Перехвачен объект общей массой $mass. Ориентировочное время прибытия ".$item['event_time'], 4 );
                  break;
                case 104 :
                  $mass = db_fetch_val( "SELECT SUM( o.mass ) mass FROM ships s, ship_types st, objects o WHERE st.object_id = s.object_id AND st.conserv_id = o.id AND s.fleet_id = ".$item['ship_id'], 'mass' );
                  send_msg( 1, $user->uid, "Перехвачен объект общей массой $mass. Ориентировочное время прибытия ".$item['event_time'], 4 );
                  break;
              }
            }

            if( is_numeric( $x ) && $x > 1 && $x < 9 ) {
              db_query( "UPDATE $table SET interupt = $x WHERE id = $shid" );
              if( $plt == 6 ) {
                db_query( "UPDATE ships SET interupt = $x WHERE interupt > 0 AND fleet_id = $shid" );
              }
            }
          }
          break;

        case 27: // Release interupt
          if( $test['place_type'] == 7 && $test['interupt'] > 1 ) {
            db_query( "UPDATE $table SET interupt = 1 WHERE id = $shid" );
            if( $plt == 6 ) {
              db_query( "UPDATE ships SET interupt = 1 WHERE interupt > 0 AND fleet_id = $shid" );
            }
          }
          break;

        case 28: // Conserve into ship
          if( ( $test['place_type'] == 7 || $test['place_type'] == 8 ) && $test['inwar'] == 0 ) {
            $mother = db_fetch_row( "SELECT id, fleet_id FROM ships
                                      WHERE object_id IN (9161, 9180, 9399) AND place_type={$test['place_type']} AND place_id={$test['place_id']} AND
                                            arg1={$test['arg1']} AND arg2={$test['arg2']} AND id=$x" );
          } else {
            $mother = db_fetch_row( "SELECT id, fleet_id FROM ships
                                      WHERE ( object_id IN (9161, 9180, 9399) AND place_type={$test['place_type']} AND place_id={$test['place_id']} AND id=$x ) OR
                                            ( id=$x AND {$test['place_type']} = 2 AND $x = {$test['place_id']} )" );
          }
          if( $mother['fleet_id'] ) {
            $out .= '&fid=F'.$mother['fleet_id'];
          } else {
            $out .= '&fid=S'.$mother['id'];
          }

          if( isset( $mother['id'] ) && is_numeric( $mother['id'] ) ) {
            if( $add == 100 ) {
              if( $user->real_id == $shid && $user->real_type == 6 ) {
                if( $mother['fleet_id'] && $mother['fleet_id'] != $shid ) {
                  db_query( "UPDATE users SET place_type = 6, place_id = {$mother['fleet_id']} WHERE id = ".$user->uid );
                } else {
                  db_query( "UPDATE users SET place_type = 2, place_id = {$mother['id']} WHERE id = ".$user->uid );
                }
              }

              $ships = db_fetch_array( "SELECT id, object_id FROM ships WHERE fleet_id = $shid" );
              foreach( $ships as $ship ) {
                if( $ship['id'] != $mother['id'] ) {
                  db_query( "UPDATE warehouse SET place_type = 7 WHERE place_type = 2 AND place_id = {$ship['id']}" );

                  $type = db_fetch_row( "SELECT st.conserv_id, o.mass
                                           FROM ship_types st
                                     INNER JOIN objects o ON o.id = st.conserv_id
                                          WHERE st.object_id = ".$ship['object_id'] );
    
                  if( get_cargo( $mother['id'], true ) >= $type['mass'] ) {
                    db_query( "DELETE FROM ships WHERE id = ".$ship['id'] );
                    add_warehouse_item( 2, $mother['id'], $type['conserv_id'], 1 );
                  }

                  $items = db_fetch_array( "SELECT w.object_id, w.object_cnt, o.mass
                                              FROM warehouse w
                                        INNER JOIN objects o ON o.id = w.object_id
                                             WHERE w.place_id = {$ship['id']} AND w.place_type = 7" );
                  foreach( $items as $ware ) {
                    sub_warehouse_item( 7, $ship['id'], $ware['object_id'], $ware['object_cnt'] );

                    $mcargo = get_cargo( $mother['id'], true );
                    if( $mcargo >= $ware['object_cnt'] * $ware['mass'] ) {
                      add_warehouse_item( 2, $mother['id'], $ware['object_id'], $ware['object_cnt'] );
                    } else {
                      add_warehouse_item( 2, $mother['id'], $ware['object_id'], floor( $mcargo / $ware['mass'] ) );
                    }
                  }
                }
              }
              db_query( "UPDATE ships SET fleet_id = null WHERE fleet_id = $shid" );
              db_query( "DELETE FROM fleets WHERE id = $shid" );
            } else {
              if( isset( $test['id'] ) && is_numeric( $test['id'] ) ) {

                if( $user->real_id == $shid && $user->real_type == 2 ) {
                  if( $mother['fleet_id'] ) {
                    db_query( "UPDATE users SET place_type = 6, place_id = {$mother['fleet_id']} WHERE id = ".$user->uid );
                  } else {
                    db_query( "UPDATE users SET place_type = 2, place_id = {$mother['id']} WHERE id = ".$user->uid );
                  }
                }

                db_query( "UPDATE warehouse SET place_type = 7 WHERE place_type = 2 AND place_id = {$test['id']}" );
                $type = db_fetch_row( "SELECT st.conserv_id, o.mass
                                         FROM ship_types st
                                   INNER JOIN objects o ON o.id = st.conserv_id
                                        WHERE st.object_id = ".$test['object_id'] );

                if( get_cargo( $mother['id'], true ) >= $type['mass'] ) {
                  db_query( "DELETE FROM ships WHERE id = ".$test['id'] );
                  add_warehouse_item( 2, $mother['id'], $type['conserv_id'], 1 );
                }

                $items = db_fetch_array( "SELECT w.object_id, w.object_cnt, o.mass
                                            FROM warehouse w INNER JOIN objects o ON o.id = w.object_id
                                           WHERE w.place_id = {$test['id']} AND w.place_type = 7" );

                foreach( $items as $ware ) {
                  sub_warehouse_item( 7, $shid, $ware['object_id'], $ware['object_cnt'] );

                  $mcargo = get_cargo( $mother['id'], true );
                  if( $mcargo >= $ware['object_cnt'] * $ware['mass'] ) {
                    add_warehouse_item( 2, $mother['id'], $ware['object_id'], $ware['object_cnt'] );
                  } else {
                    add_warehouse_item( 2, $mother['id'], $ware['object_id'], floor( $mcargo / $ware['mass'] ) );
                  }
                }
              }
            }
          }
          break;

        case 29: // Return back
          $timer = db_fetch_row( "SELECT se.id, se.event_type, se.from_type, se.timer - (UNIX_TIMESTAMP(event_time) - UNIX_TIMESTAMP(NOW())) least
                                    FROM space_events se WHERE se.ship_id = $shid" );

          if( isset( $timer['id'] ) && $timer['from_type'] ) {
            switch( $timer['event_type'] ) {
              case 2:
              case 3:
              case 4:
              case 5:
              case 102:
              case 103:
              case 104:
              case 105:
                db_query( "UPDATE space_events
                              SET arg1 = from_arg1, arg2 = from_arg2, event_type = from_type, timer = {$timer['least']}, event_time = DATE_ADD( NOW(), INTERVAL {$timer['least']} SECOND )
                            WHERE id = ".$timer['id'] );

                db_query( "UPDATE space_events SET from_arg1 = 0, from_arg2 = 0, from_type = 0 WHERE id = ".$timer['id'] );
                break;

              default:
                $out = 'err=3';
                exit;
            }
          }
          break;

        case 30: // Deconserve all
          if( $limit < 0 ) {
            send_msg( 1, $user->uid, t( "Превышен лимит управления" ), 16 );
            break;
          }

          switch( $test['place_type'] ) {
            case 0:
            case 1:
            case 7:
            case 8:
              switch( $type ) {
                case 'S' :
                  $wares = db_fetch_array( "SELECT w.object_id wid, w.place_id, w.place_type, w.object_cnt,
                                                   st.code, st.object_id, st.shield, st.interupt
                                              FROM warehouse w
                                        INNER JOIN ship_types st ON st.conserv_id = w.object_id
                                        INNER JOIN objects o ON o.id = w.object_id AND o.class = 9
                                        INNER JOIN ships s ON s.id = w.place_id AND s.user_id = {$user->uid}
                                             WHERE w.place_id = $shid AND w.place_type = 2" );
                  break;

                case 'F' :
                  $wares = db_fetch_array( "SELECT w.object_id wid, w.place_id, w.place_type, w.object_cnt,
                                                   st.code, st.object_id, st.shield, st.interupt
                                              FROM warehouse w
                                        INNER JOIN ship_types st ON st.conserv_id = w.object_id
                                        INNER JOIN objects o ON o.id = w.object_id AND o.class = 9
                                        INNER JOIN ships s ON s.id = w.place_id AND s.user_id = {$user->uid}
                                             WHERE s.fleet_id = $shid AND w.place_type = 2" );
                  break;

                default :
                  $out='err=2';
                  break;
              }

              foreach( $wares as $ware_item ) {
                $cnt = $ware_item['object_cnt'];

                $group = '';
                sub_warehouse_item( $ware_item['place_type'], $ware_item['place_id'], $ware_item['wid'], $cnt );
                if( $ware_item['place_type'] == 2 ) {
                  $group = db_fetch_val( 'SELECT s.group FROM ships s WHERE s.id = '.$ware_item['place_id'], 'group' );
                }
                while( $cnt > 0 ) {
                  if( $test['arg1'] == 0 && $test['arg2'] == 0 ) {
                    db_query( "INSERT INTO ships ( object_id, place_id, place_type, arg1, arg2, user_id, shield, interupt )
                                          VALUES ( {$ware_item['object_id']}, {$test['place_id']}, {$test['place_type']}, null, null, {$user->uid}, '{$ware_item['shield']}', '{$ware_item['interupt']}' )" );
                  } else {
                    db_query( "INSERT INTO ships ( object_id, place_id, place_type, arg1, arg2, user_id, shield, interupt )
                                          VALUES ( {$ware_item['object_id']}, {$test['place_id']}, {$test['place_type']}, '{$test['arg1']}', '{$test['arg2']}', {$user->uid}, '{$ware_item['shield']}', '{$ware_item['interupt']}' )" );
                  }

                  $ship_id = mysql_insert_id();
                  db_query( "UPDATE ships SET `group` = '$group', name='".$ware_item['code'].'-'.$ship_id."' WHERE id=$ship_id" );
                  $cnt--;

                  enter_place( $ship_id, false );
                }
              }
              break;

            default:
              break;
          }
          break;

        case 31: // Dock to ship
          $mks = db_fetch_row( "SELECT s.id, s.place_id, s.place_type, s.fleet_id
                                  FROM ships s
                            INNER JOIN ship_types st ON st.object_id = s.object_id
                                 WHERE st.dock = 1 AND s.id = $x" );

          if( $mks['fleet_id'] != $shid && $mks['place_id'] == $test['place_id'] && $mks['place_type'] == $test['place_type'] && $test['inwar'] == 0 ) {
            if( $type == 'S' ) {
              $need_free = db_fetch_row( "SELECT o2.mass omass
                                            FROM ships s
                                      INNER JOIN objects o2 ON o2.id = s.object_id
                                           WHERE s.id = $shid" );

              if( get_cargo( $mks['id'], true ) >= $need_free['omass'] && $mks['id'] != $shid ) {
                db_query( "UPDATE ships SET guard = 0, place_id = $x, place_type = 2, arg1=null, arg2=null WHERE id = $shid" );
              }
            } else {
              $need_free = db_fetch_row( "SELECT SUM( o2.mass ) omass
                                            FROM ships s
                                      INNER JOIN objects o2 ON o2.id = s.object_id
                                           WHERE s.fleet_id = $shid" );

              if( get_cargo( $mks['id'], true ) >= $need_free['omass'] && $mks['fleet_id'] != $shid ) {
                db_query( "UPDATE fleets SET guard = 0, place_id = $x, place_type = 2, arg1=null, arg2=null WHERE id = $shid" );
                db_query( "UPDATE ships SET guard = 0, place_id = $x, place_type = 2, arg1=null, arg2=null WHERE fleet_id = $shid" );
              }
            }

            $out = 'err=0';
            if( $mks['fleet_id'] ) {
              $out .= '&fid=F'.$mks['fleet_id'];
            } else {
              $out .= '&fid=S'.$mks['id'];
            }
          } else {
            $out = 'err=1';
          }
          break;

        case 32: // Abordage on
          if( $test['abordage'] == 0 && $test['user_id'] == $user->uid ) {
            db_query( "UPDATE $table SET abordage = 1 WHERE id = $shid" );
            if( $plt == 6 ) {
              db_query( "UPDATE ships SET abordage = 1 WHERE fleet_id = $shid" );
            }
          }
          break;

        case 33: // Abordage off
          if( $test['abordage'] == 1 && $test['user_id'] == $user->uid ) {
            db_query( "UPDATE $table SET abordage = 0 WHERE id = $shid" );
            if( $plt == 6 ) {
              db_query( "UPDATE ships SET abordage = 0 WHERE fleet_id = $shid" );
            }
          }
          break;

        case 34: // Start all factorys
          if( $limit < 0 ) {
            send_msg( 1, $user->uid, t( "Превышен лимит управления" ), 16 );
            break;
          }

          if( $test['place_type'] == 1 && $test['remote'] > 0 ) {
            $planet_id = $test['place_id'];

            $qid = db_fetch_val( "SELECT qu.id
                                    FROM users_quests qu
                              INNER JOIN users u ON u.id = qu.user_id
                                   WHERE u.place_id = $planet_id AND u.place_type = 1 AND qu.type IN( 28, 29 )", 'id' );
            if( $qid ) {
              send_msg( 1, $user->uid, t( "На планете находится исполнитель" ), 16 );
              break;
            }

            $planet = db_fetch_row( "SELECT p.type, p.name pname, s.name sname
                                       FROM planets p
                                 INNER JOIN stars s ON s.id = p.star_id
                                      WHERE p.id = $planet_id" );
            $ptype = $planet['type'];

            $energy_av = get_energy( $planet_id, 1 );
            $warehouse = get_warehouse( $planet_id, 1 );

            if( $energy_av >= 0 && $warehouse > 0 && $ptype != 1 ) {
              $facts = db_fetch_array( "SELECT SQL_NO_CACHE pb.x, pb.y, pb.level, pb.last_id, o.name
                                          FROM planets_buildings pb
                                     LEFT JOIN objects o ON o.id = pb.last_id
                                     LEFT JOIN planet_events pe ON ( pb.planet_id = pe.planet_id AND pb.x = pe.x AND pb.y = pe.y )
                                         WHERE pb.object_id = 33 AND pe.id IS NULL and pb.planet_id = $planet_id" );
              if( count( $facts ) ) {
                $layouts = db_fetch_array( "SELECT o1.id, o1.name
                                              FROM warehouse w
                                        INNER JOIN objects o ON o.id = w.object_id
                                        INNER JOIN objects_sub os ON os.res_id = o.id
                                        INNER JOIN objects o1 ON o1.id = os.object_id
                                             WHERE w.place_id = $planet_id AND
                                                   w.place_type = 1 AND
                                                   o.class = 6" );

                foreach( $facts as $factory ) {
                  if( count( $layouts ) == 1 ) {
                    $def = $layouts[0]['id'];
                    $def_name = $layouts[0]['name'];
                  } else {
                    $def = $factory['last_id'];
                    $def_name = $factory['name'];
                  }

                  if( $def > 0 ) {
                    $items = db_fetch_array( "SELECT o.id, o.class, os.res_cnt, IFNULL( w.object_cnt, 0 ) object_cnt
                                                FROM objects_sub os
                                          INNER JOIN objects o ON o.id = os.res_id AND o.class IN( 1, 2, 6, 7, 9 )
                                           LEFT JOIN warehouse w ON w.object_id = o.id AND w.place_id = $planet_id AND w.place_type = 1
                                               WHERE os.object_id = ".$def );
                    $can_build = true;
                    foreach( $items as $item ) {
                      if( $item['res_cnt'] > $item['object_cnt'] ) {
                        $can_build = false;
                      }
                    }

                    if( $can_build ) {
                      $x = $factory['x'];
                      $y = $factory['y'];

                      foreach( $items as $item ) {
                        if( $item['class'] == 1 || $item['class'] == 2 || $item['class'] == 9 ) {
                          sub_warehouse_item( 1, $planet_id, $item['id'], $item['res_cnt'] );
                        }
                      }

                      $total_time = get_make_time( $def );
                      db_query( "INSERT INTO planet_events ( event_type, x, y, planet_id, object_id, event_time, timer, user_id )
                                                    VALUES ( 5, $x, $y, $planet_id, 33, DATE_ADD( NOW(), INTERVAL $total_time SECOND ), $total_time, {$user->uid} )" );
                      $id = mysql_insert_id();
                      db_query( "INSERT INTO planets_make ( event_id, object_id, cycle ) VALUES ( $id, $def, {$factory['level']} )" );
                      send_msg( 1, $user->uid, "В системе {$planet['sname']} на планете {$planet['pname']} запущено изготовление $def_name ({$factory['level']}) каждый цикл длительностью $total_time секунд.", 4 );
                    }
                  }
                }
              } else {
                send_msg( 1, $user->uid, "В системе {$planet['sname']} на планете {$planet['pname']} нет свободных заводов.", 4 );
              }
            } else {
              send_msg( 1, $user->uid, "В системе {$planet['sname']} на планете {$planet['pname']} невозможно запустить заводы. Энергии $energy_av, места на складе $warehouse", 4 );
            }
          }
          break;

        case 35: // Start all sintez
          if( $limit < 0 ) {
            send_msg( 1, $user->uid, t( "Превышен лимит управления" ), 16 );
            break;
          }

          if( $test['place_type'] == 0 && $test['remote'] > 0 ) {
            $planet_id = $test['place_id'];

            $qid = db_fetch_val( "SELECT qu.id
                                    FROM users_quests qu
                              INNER JOIN users u ON u.id = qu.user_id
                                   WHERE u.place_id = $planet_id AND u.place_type = 1 AND qu.type IN( 28, 29 )", 'id' );
            if( $qid ) {
              send_msg( 1, $user->uid, t( "На планете находится исполнитель" ), 16 );
              break;
            }

            $planet = db_fetch_row( "SELECT p.type, p.name pname, s.name sname
                                       FROM planets p
                                 INNER JOIN stars s ON s.id = p.star_id
                                      WHERE p.id = $planet_id" );
            $ptype = $planet['type'];

            $energy_av = get_energy( $planet_id, 0 );
            $warehouse = get_warehouse( $planet_id, 0 );

            if( $energy_av >= 0 && $warehouse > 0 && $ptype != 1 ) {
              $ware_obj = db_fetch_array( "SELECT o.id, o.name
                                             FROM warehouse w
                                       INNER JOIN sintez s ON s.res_id = w.object_id
                                       INNER JOIN objects o ON o.id = s.object_id
                                            WHERE w.place_id = $planet_id AND
                                                  w.place_type = 0 AND
                                                  w.object_cnt > 0 AND
                                                  o.class = 1" );

              $sintezers = db_fetch_array( "SELECT SQL_NO_CACHE ob.x, ob.level, ob.last_id, o.name
                                              FROM orbits_buildings ob
                                         LEFT JOIN objects o ON o.id = ob.last_id
                                         LEFT JOIN orbit_events oe ON ( ob.planet_id = oe.planet_id AND ob.x = oe.x )
                                             WHERE ob.object_id = 3010 AND oe.id IS NULL and ob.planet_id = $planet_id" );

              foreach( $sintezers as $sintez ) {
                if( count( $ware_obj ) == 1 ) {
                  $def = $ware_obj[0]['id'];
                  $def_name = $ware_obj[0]['name'];

                  $items = db_fetch_row( "SELECT w.object_id, IFNULL( w.object_cnt, 0 ) object_cnt
                                            FROM sintez s
                                       LEFT JOIN warehouse w ON w.place_id = $planet_id AND w.place_type = 0 AND s.res_id = w.object_id
                                           WHERE s.object_id = $def" );
                } else {
                  $def = $sintez['last_id'];
                  $def_name = $sintez['name'];

                  $items = db_fetch_row( "SELECT w.object_id, IFNULL( w.object_cnt, 0 ) object_cnt
                                            FROM sintez s
                                       LEFT JOIN warehouse w ON w.place_id = $planet_id AND w.place_type = 0 AND s.res_id = w.object_id
                                           WHERE s.object_id = $def" );
                }

                $x = $sintez['x'];
                $level = $sintez['level'];

                if( $items['object_cnt'] >= 1000 ) {
                  sub_warehouse_item( 0, $planet_id, $items['object_id'], 1000 );
  
                  $total_time = get_sintez_time( $def );
                  db_query( "INSERT INTO orbit_events ( event_type, x,  planet_id, object_id,                                     event_time,       timer,      user_id )
                                               VALUES ( 8,         $x, $planet_id,      3010, DATE_ADD( NOW(), INTERVAL $total_time SECOND ), $total_time, {$user->uid} )" );
                  $id = mysql_insert_id();
                  db_query( "INSERT INTO orbits_make ( event_id, object_id, cycle ) VALUES ( $id, $def, $level )" );

                  send_msg( 1, $user->uid, "В системе {$planet['sname']} на планете {$planet['pname']} запущено преобразование $def_name", 4 );
                }
              }
            } else {
              send_msg( 1, $user->uid, "В системе {$planet['sname']} на планете {$planet['pname']} невозможно запустить преобразование. Энергии $energy_av, места на складе $warehouse", 4 );
            }
          }
          break;

        case 36: // Start all assemble
          if( $limit < 0 ) {
            send_msg( 1, $user->uid, t( "Превышен лимит управления" ), 16 );
            break;
          }

          if( $test['remote'] > 0 ) {
            if( $test['place_type'] == 1 ) {
              $planet_id = $test['place_id'];

              $qid = db_fetch_val( "SELECT qu.id
                                      FROM users_quests qu
                                INNER JOIN users u ON u.id = qu.user_id
                                     WHERE u.place_id = $planet_id AND u.place_type = 1 AND qu.type IN( 28, 29 )", 'id' );
              if( $qid ) {
                send_msg( 1, $user->uid, t( "На планете находится исполнитель" ), 16 );
                break;
              }

              $planet = db_fetch_row( "SELECT p.type, p.name pname, s.name sname
                                         FROM planets p
                                   INNER JOIN stars s ON s.id = p.star_id
                                        WHERE p.id = $planet_id" );
              $ptype = $planet['type'];

              $energy_av = get_energy( $planet_id, 1 );
              $warehouse = get_warehouse( $planet_id, 1 );
              if( $energy_av >= 0 && $warehouse > 0 && $ptype != 1 ) {
                $facts = db_fetch_array( "SELECT SQL_NO_CACHE pb.x, pb.y, pb.level, pb.last_id, o.name
                                            FROM planets_buildings pb
                                      INNER JOIN objects o ON o.id = pb.last_id
                                       LEFT JOIN planet_events pe ON ( pb.planet_id = pe.planet_id AND pb.x = pe.x AND pb.y = pe.y )
                                           WHERE pb.object_id = 39 AND pe.id IS NULL and pb.planet_id = $planet_id" );
                if( count( $facts ) ) {
                  $layouts = db_fetch_array( "SELECT o1.id, o1.name
                                                FROM warehouse w
                                          INNER JOIN objects o ON o.id = w.object_id
                                          INNER JOIN objects_sub os ON os.res_id = o.id
                                          INNER JOIN objects o1 ON o1.id = os.object_id
                                               WHERE w.place_id = $planet_id AND
                                                     w.place_type = 1 AND
                                                     o.class = 7" );

                  foreach( $facts as $factory ) {
                    if( count( $layouts ) == 1 ) {
                      $def = $layouts[0]['id'];
                      $def_name = $layouts[0]['name'];
                    } else {
                      $def = $factory['last_id'];
                      $def_name = $factory['name'];
                    }

                    if( $def > 0 ) {
                      $items = db_fetch_array( "SELECT o.id, o.class, os.res_cnt, IFNULL( w.object_cnt, 0 ) object_cnt
                                                  FROM objects_sub os
                                            INNER JOIN objects o ON o.id = os.res_id AND o.class IN( 1, 2, 6, 7, 9 )
                                             LEFT JOIN warehouse w ON w.object_id = o.id AND w.place_id = $planet_id AND w.place_type = 1
                                                 WHERE os.object_id = ".$def );
                      $can_build = true;
                      foreach( $items as $item ) {
                        if( $item['res_cnt'] > $item['object_cnt'] ) {
                          $can_build = false;
                        }
                      }

                      if( $can_build ) {
                        $x = $factory['x'];
                        $y = $factory['y'];

                        foreach( $items as $item ) {
                          if( $item['class'] == 1 || $item['class'] == 2 || $item['class'] == 9 ) {
                            sub_warehouse_item( 1, $planet_id, $item['id'], $item['res_cnt'] );
                          }
         {[шe–ШЙ©\j«jЌy<L«жЁ(»s„щ°»FN2J+б©cqoк?{=чоxщ«n2ЩwБ6џя hxoЕ·“IЎ)>$їУ–1,:”°•1¬№<…зѓ‘’N+лЏЋїґівЏЌ°|*µрюќўxGВчqxWB°‚б®cіЋ14еv(29іЖЗ=hўѕ‹€jФћЩЙыЄљiyиpSҐN¤]9«ЕGoёПшЎвйьаZi–6уЬ[[Ѕў_]‘,Се]™ўщr™#=IчЇ–<1uoўьсuЇШЎ»Фјc%ЌдъДё[›9љззe]§p!q·+Ыћ(ўѕ Њg*.JнЙ_ОН2pф(УqдЉZЈПьiыA|CрGБпьрeъxz/‰o—‹ьenO\i,‹єM¤ЩЪ9‰&YS.кP2~MІ‘ґ=+Г^СХ,,5_Zй2П+pМкЋд‚	АfА’wgљ(ЇјЖВ0АёЕhхщћмuЈчя #хGбмI¦ьhшЗЈ|¶ш‡yаэ:8Эk°ш^bцTVЉ=±Bn"HЫч¤пbьЁИ<зфцПэ›>я Б0юиr|р‘в‹ЮэkRшХс>|cгљЕЎu¤‘щq#HКы…К вAЕSб«.џЧЗКЊ}іњ5µХ&юуz	<';Юй}зв‹ѕ4|Vш§aЁ|oшїгЌcвOЉґЁR_iъј‚ЗГZН–S„;bЪ‡ќ»FJЇ §?Гцѕ4їшAЄ|fФю!kє…хЖ·™kбЩвGТ"–tiЌДд’eЪЁP"€юцwdQEt$©Хж†Ћс_-4<ј^"Іs\Ъ9(ь»аЏ‰^0Цпя іҐФb·НВYK<6А3ЈќЋ ОFxоr9Н}ѕ.Фь<Ъ‡ЫмЧчZzйWѕ!»‘Їх'µiL’[Ае…ОX'P1Eжз4йФ¦Ў4љя ‚Џ6qЌ:йSIiЫРъkВљЖµweўYЮлzЕэ«ўЛ5­цҐ-Н¤Т3†iLe±ј–<ъq^ЛвЫ8Ї$}ЩЉтЬy°_ЗЕД-ѓjznШ№>ФQ_“TџЧ№o¦ї™бgљхpрu$Э¶ыМmN8u­&ЗZЅCэ«%ПцUхм,"—PтNХљLх„¬ЭАтL—ќ?R†K5X&H|у*1А ?{ш@д‘нEмжя jR^Oф<к‹‡ґkЮ¶я q›§~НzFїсGPљ?jъ'‡5‹›ќcTрж‹l¶fбўґyеHоГпЏН0а°†о§ђ~1с>ќўк>	с—Ћх]:KэMз›Eрн“ЮІйѕ·Ќ¤xСP‚d!-ц–%Xіп$гi(Ї«”c€Бющ_б_!СњЮ"-Ѕy’щрWашыв4«Џ7…`–д[lф%Х.YА`Ґ§EгшzЖЅГгЇмгр—цIµ[»Ќ'\ш­­JAs®xЃј;¤Eж:&^КЬѕ71Зљ3љ(Ї
(УД*pЉKсЩuЬъЉu'W0ЋoЬz5·е©С|шЇЁ…6сnЃбџxRЧВЁ—ZnѓўhQ‹gќSrK<Тпi
нЮ9=с_j>#ьFѕФuПxЗ]Фп5}H¤‚[А±Ыѓ'Ёйћ§ћўЉь»9Еb(f3Ќё§+;i§,_кz<5c+ЕGDХЇЇO3фіцэЌь	с{ЗшіЗЪж·¬Zи2J=9Ъй`БёњJYЃ$t§~1чПн“со?‚vЦюрПГ]кќј6–Ю)Ф­ЖЇ¦+Ые’J)АЬЭ‡l©(ЇЦт•хnҐ€ЎоНКН­нk›`§:•’›єз·Иш/Жя ·gДЇьє±µрч†тКъKmC\Тb“AХхИ¶I‘\<G`YR6±TеБR¤Я‘+шлwыVьDрП‰uя ‡їѕ[ш>В;!¤|<С%Т сЖЫЕЦ¦П+¬і”O-¤TBае·74Q^®R«‚•zЋуіХлЫnЗЬU§ANЪЯя mGоПЋ<YэЊхНvoи“@љ>Џ¤iъЩ±ЎiЙ-К$,!9.Р–<ВЫџq=xьµ·ћ}z	aФЊ2ќEџнRЗn°ИеIB@аћЅЋ(ўѕZќIТКeV›ґ№ћїqщ»Њib*ОћЋптG…|*†o
ьAрЪuГ	nьSџ,Ќё9[‰%MЩЭХs‘фгыпы3i6ъ§ьуб'…¤%tП…ї|IЁЪ«Жі6Ї$DІаЌ±ѓ4ѕfpД9щиўєpХjK0Гу>Џя J‚ь›>›9bgGЫѕmVюҐЏШГрьUэЁµДSіэѕЯ]ФўІ–јЋЦж}^Д,Щ•ЊK)6Њsкkфю
“с+Д>ш§рGаo‡'“Jр/‚4vсt–qЬ3Йв+ЙJE]ћ>H7D^7ю°WйYDcG†1Х©+M»]okшxЄ%YQСЭ-рЗДxmЕо™u5ѕ§¬Їќ{©C7“u#*Д›ѓђqА ЊWSр9нnµЇ‰o¬гѕс‡ѓґ]Bя M»єo:FhmьЕ#ЬќЂћ¤ ўЉьGZ«О>gЛ{ЪэOҐj•pСU%~]W“Рщ'ц'Ц5/ьKшќ}©^\Э^|JУ­јsв«›Ы‰/'Ф/LІ±fbG °	ЊmUћµъќс6ЮЯбЖ‹с:8Ms§ш·TУ!ХґЃ0±То.V?іCtс"ьЮZ*~мњ9E.XЂAE}ҐJХi*юОMj—Й§tcѓ­Wы.uyџ7“? ni-4ї[G{cІЏб›I<»©д·ЋI$‹eтИg\1Вd Nk/втйЯїf?ЩыFрvЏ¦hЮ=ХЇЌРУ­„	ўЪюбЮОДbY
¶чsз$
+ујtзW4§FЈј/-:hґРрhQҐV…ZµдЇoЅ“ю5ЉYю0л¶ЧwsЪиБУ4KI®dљЫLЂlp‘#1Й$•Б$з=«хWю	ЗЎ?Џ?hmEјФ®м4Н#Bёс^Ў°6¶mЭm¤ђэФbд± зЊЌФQ_58Eс6‹^леУХДлАT©:ґЈ);{ќ_‘ъ-ыRлљ–џ®x;XСљУNєёс¦­vTЩ%М,-ФгзQП™ФћХщ§сO]їХ~2xЮзTћ}BзВрi~ТжєќҐ1}ѕзЛљзЌаЃюИжЉ+ф%nX¬<ћь±ьeя 6cC\|›юeя ¶џБaѕ(jъПЉю|‚ГOТь#ы7|=±Хј7ql…µ]nя Д¶µеНФјmTHЈD…rЩ
>=эљбП‡ьiгы—kЌVВпKр®љЄM№ґMBо(з”И§'еИЪз#$а‚Q_gЋњЄd4%7wЛЗ”ъјMIЖIо’z=я цДшSВ~У/Ї4™>(юТZ·‹јU©YКЭ?†4Н6ПE‡К d@/nџs1Йђ`.+ъ\шCруВZГm;З=їЏфПЩ“а=‡ЕШлгМ‡ДьЦўо;ыаЫФ›vra\0F№"Љ+~ГaЦ_‘sЮzЫ¶Я’=, р4®єїВЗѓлјSсвv‰a©Md’x†Жя ЖъњчVџЪ1^ЯеЋЬL›‘ћ
!Ћ-б@z–и^рО‹ЇOс#Жљl?u_iЮ2УґЭ]~ЙЈЬ^AтВппЪнї©±А ўѕc8Жbўэ¤fщЇїН,5
™¤%8&оя 3оoЩЏWТ>xBшѓб/
и°|NэўјMqв/xЪтw>–'»dK[hП•m yЉYЃcЙ x§€>&ш§QЦя iЯш®сјM®x~{=Жid}:М%¬И€ЖОЬ,џ'Эдz”VXМn.J†Ф~ЛщzjЈ­єЅ^»џ®fсX<’њрѕм­єЯпЬьtЦ<wсшьtш±/‰5Щь;сЮџ¤Лан(Н©ЩxЋYјЗужёљoЭ…0°¬gр¬ёзЃm"+•ёЋGЪ#уJмSџ”o±-Ы{СE|џЖ7Ќ;+FЦУК?Ц§б