<?php

  global $user;

  $out = 'err=0';

  if( isset( $_GET['qt'] ) && is_numeric( $_GET['qt'] ) ) {

    $qt = $_GET['qt'];
    $pers = isset( $_GET['pers'] ) ? $_GET['pers'] : null;
    $long = $_GET['long'];
    $visible = $_GET['vis'];
    $conf = $_GET['conf'];
    $price = $_GET['price'];

    $v0 = isset( $_GET['v0'] ) ? $_GET['v0'] : null;
    $v1 = isset( $_GET['v1'] ) ? $_GET['v1'] : null;
    $v2 = isset( $_GET['v2'] ) ? $_GET['v2'] : null;
    $v3 = isset( $_GET['v3'] ) ? $_GET['v3'] : null;
    $v4 = isset( $_GET['v4'] ) ? $_GET['v4'] : null;
    $v5 = isset( $_GET['v5'] ) ? $_GET['v5'] : null;
    $v6 = isset( $_GET['v6'] ) ? $_GET['v6'] : null;
    $v7 = isset( $_GET['v7'] ) ? $_GET['v7'] : null;
    $v8 = isset( $_GET['v8'] ) ? $_GET['v8'] : null;
    $v9 = isset( $_GET['v9'] ) ? $_GET['v9'] : null;

    db_safe( $qt );
    db_safe( $pers );
    db_safe( $long );
    db_safe( $visible );
    db_safe( $conf );
    db_safe( $price );

    db_safe( $v0 );
    db_safe( $v1 );
    db_safe( $v2 );
    db_safe( $v3 );
    db_safe( $v4 );
    db_safe( $v5 );
    db_safe( $v6 );
    db_safe( $v7 );
    db_safe( $v8 );
    db_safe( $v9 );

    $v0 = decode_in( $v0 );
    $v1 = decode_in( $v1 );
    $v2 = decode_in( $v2 );
    $v3 = decode_in( $v3 );
    $v4 = decode_in( $v4 );
    $v5 = decode_in( $v5 );
    $v6 = decode_in( $v6 );
    $v7 = decode_in( $v7 );
    $v8 = decode_in( $v8 );
    $v9 = decode_in( $v9 );

    $result = db_fetch_row( "SELECT ut.id, ut.name, ut.status,
                                    ut.type0, ut.type1, ut.type2, ut.type3, ut.type4, ut.type5, ut.type6, ut.type7, ut.type8, ut.type9,
                                    qt.arg0, qt.arg1, qt.arg2, qt.arg3, qt.arg4, qt.arg5, qt.arg6, qt.arg7, qt.arg8, qt.arg9
                               FROM u2u_types ut
                         INNER JOIN quest_types qt ON qt.type = ut.id
                              WHERE ut.titul <= {$user->titul} AND ut.id = $qt" );

    if( $conf == 0 ) {
      $ptest = quest_field( $user, 4, $price );
      $ptext = 'Кредитов';
    } else {
      $ptest = quest_field( $user, 5, $price );
      $ptext = 'Конфедерат';
    }

    if( $pers != null ) {
      $pers = quest_field( $user, 6, $pers );
    } else {
      $pers = array( 'uid' => 'null' );
    }

    if( $result['id'] > 0 && $ptest['err'] == 0 && ( $pers['uid'] == 'null' || $pers['err'] == 0 ) ) {

      switch( $qt ) {

        case 16: // Move planet
          $from = quest_field( $user, $result['type0'], $v0 );
          $to = quest_field( $user, $result['type2'], $v2 );

          if( $from['err'] == 0 && $to['err'] == 0 && $from['ptype'] != 1 && $to['ptype'] != 1 && $from['pid'] != $to['pid'] ) {

            db_query( "INSERT INTO users_quests ( status, type, arg0, arg1, arg2, arg3, arg4, arg5, arg6 )
                                         VALUES ( {$result['status']}, $qt, '$v0', '{$from['sname']}', '$v2', '{$to['sname']}', $price, '$ptext', $long )" );

            $event_id = mysql_insert_id();
            db_query( "INSERT INTO u2u_quests (  event_id,      user_id,        to_user, type,   summ, currency, time_long, visibility,           arg0,           arg1,         arg2,         arg3,            arg4,          arg5 )
                                       VALUES ( $event_id, {$user->uid}, {$pers['uid']},  $qt, $price,    $conf,     $long,   $visible, {$from['pid']}, {$from['sid']}, {$to['pid']}, {$to['sid']}, {$from['ppos']}, {$to['ppos']} )" );

            db_query( "INSERT INTO bay_log (user_id, log_text, summ, conf)
                       VALUES ( {$user->uid}, 'Bay exchange quest of $v0 {$from['sname']} and $v2 {$to['sname']} for $price $ptext', $price, $conf )" );

            if( $conf == 1 ) {
              db_query( "UPDATE users u SET u.credits = u.credits - $price WHERE u.id = ".$user->uid );
            } else {
              db_query( "UPDATE users u SET u.money = u.money - $price WHERE u.id = ".$user->uid );
            }
          }
          break;

        case 17: // Kill planet
        case 18: // Kill orbit
          $star = quest_field( $user, $result['type0'], $v0 );
          $target = quest_field( $user, $result['type1'], $v1 );

          if( $target['err'] == 0 && $target['ptype'] != 1 && isset( $star['sid'] ) && isset( $target['pid'] ) && $target['sid'] == $star['sid'] ) {
            if( $qt == 17 ) {
              $control = db_fetch_val( "SELECT count(*) cnt FROM orbits_buildings WHERE shield > 0 AND planet_id = {$target['pid']}", 'cnt' );
            } else {
              $control = db_fetch_val( "SELECT count(*) cnt FROM planets_buildings WHERE shield > 0 AND planet_id = {$target['pid']}", 'cnt' );
            }
            if( $control > 0 ) {
              db_query( "INSERT INTO users_quests ( status, type, arg1, arg2, arg0, arg3, arg4 )
                                           VALUES ( {$result['status']}, $qt, '$v1', '{$target['sname']}', $price, '$ptext', $long )" );

              $event_id = mysql_insert_id();
              db_query( "INSERT INTO u2u_quests (  event_id,      user_id,        to_user, type,   summ, currency, time_long, visibility,           arg0,           arg1 )
                                         VALUES ( $event_id, {$user->uid}, {$pers['uid']},  $qt, $price,    $conf,     $long,   $visible, {$target['pid']}, {$target['sid']} )" );

              db_query( "INSERT INTO bay_log (user_id, log_text, summ, conf)
                         VALUES ( {$user->uid}, 'Bay kill quest of $v1 {$target['sname']} for $price $ptext', $price, $conf )" );

              if( $conf == 1 ) {
                db_query( "UPDATE users u SET u.credits = u.credits - $price WHERE u.id = ".$user->uid );
              } else {
                db_query( "UPDATE users u SET u.money = u.money - $price WHERE u.id = ".$user->uid );
              }
            } else {
              $out = "err=$qt&errtext=Обороны не обнаружено.";
              break;
            }
          } else {
            $out = "err=$qt&errtext=Неверное сочетание системы и планеты или планета земного типа.";
          }
          break;

        case 19: // Build karier
        case 20: // Build mines
        case 21: // Build oil rings
        case 22: // Build dispenser
        case 23: // Build shield
        case 24: // Build rokets
        case 25: // Build lasers
        case 26: // Build plasma
        case 27: // Build quantum

          $target = quest_field( $user, $result['type0'], $v0 );
          if( $target['err'] != 0 ) {
            $out = "err=$qt&errtext=Неверно выбрана планета";
            break;
          }

          $cnt = quest_field( $user, $result['type2'], $v2 );
          if( $cnt['err'] != 0 ) {
            $out = "err=$qt&errtext=Неправильное количество построек";
            break;
          }

          $content = array_map( 'trim', explode( "\n", trim( db_fetch_val( "SELECT top FROM planets_maps WHERE id = {$target['pid']}", 'top' ) ) ) );
          if( $content ) {
//            $content = array_map( 'trim', file( "./pages/environment/planets/{$target['pid']}.top" ) );
            $size = strlen( $content[0] ) * count( $content );
          } else {
            $out = "err=$qt&errtext=Неверно выбрана планета";
            break;
          }

          $closed = db_fetch_val( "SELECT status FROM defence WHERE user_id = {$user->uid} AND place_type = 1 AND place_id = ".$target['pid'], 'status' );
          if( $closed != 1 ) {
            $out = "err=$qt&errtext=Планета должна находится под вашим контролем в статусе \"Можно только мне\"";
            break;
          }

          $busy = db_fetch_val( "SELECT count(*) cnt FROM planets_buildings WHERE planet_id = ".$target['pid'], 'cnt' );
          if( $size - $busy < $v0 ) {
            $out = "err=$qt&errtext=Недостаточно свободной поверхности";
            break;
          }

          $energy_av = get_energy( $target['pid'], 1 );
          $energy_nd = db_fetch_val( "SELECT b.energy FROM buildings b WHERE b.id = ".$result['arg3'], 'energy' );
          if( $energy_av < $energy_nd * $v2 ) {
            $out = "err=$qt&errtext=Недостаточно энергии, необходимо еще ".( $energy_nd * $v2 - $energy_av );
            break;
          }

          $res = db_fetch_array( "SELECT o.id, o.name, ( os.res_cnt * $v2 ) ncnt, IFNULL( w.object_cnt, 0 ) cnt
                                    FROM objects_sub os
                              INNER JOIN objects o ON o.id = os.res_id
                               LEFT JOIN warehouse w ON w.object_id = os.res_id AND w.place_id = {$target['pid']} AND w.place_type = 1
                                   WHERE os.object_id = ".$result['arg3'] );
          foreach( $res as $item ) {
            if( $item['cnt'] < $item['ncnt'] ) {
              $out = "err=$qt&errtext=Недостаточно {$item['name']} необходимо еще ".( $item['ncnt'] - $item['cnt'] );
              break 2;
            }
          }

          db_query( "INSERT INTO users_quests ( status, type, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7 )
                                       VALUES ( {$result['status']}, $qt,  $v2, $price, '$ptext', {$result['arg3']}, '{$result['arg4']}', '$v0', '{$target['sname']}', $long )" );

          $event_id = mysql_insert_id();

          foreach( $res as $item ) {
            sub_warehouse_item( 1, $target['pid'], $item['id'], $item['ncnt'] );
            add_warehouse_item( 1, $target['pid'], $item['id'], $item['ncnt'], false, $event_id );
          }

          $cnt = db_fetch_val( "SELECT count(*) cnt FROM planets_buildings WHERE planet_id = {$target['pid']} AND object_id = {$result['arg3']}", 'cnt' );
          db_query( "INSERT INTO u2u_quests (  event_id,      user_id,        to_user, type,   summ, currency, time_long, visibility,             arg0, arg4 )
                                     VALUES ( $event_id, {$user->uid}, {$pers['uid']},  $qt, $price,    $conf,     $long,   $visible, {$target['pid']}, $cnt )" );

          db_query( "INSERT INTO bay_log (user_id, log_text, summ, conf)
                     VALUES ( {$user->uid}, 'Bay build quest of $v2 {$result['arg4']} for $price $ptext', $price, $conf )" );

          if( $conf == 1 ) {
            db_query( "UPDATE users u SET u.credits = u.credits - $price WHERE u.id = ".$user->uid );
          } else {
            db_query( "UPDATE users u SET u.money = u.money - $price WHERE u.id = ".$user->uid );
          }
          break;

        case 28: // Upgrade all +1
          $target = quest_field( $user, $result['type0'], $v0 );
          if( $target['err'] != 0 ) {
            $out = "err=$qt&errtext=Неверно выбрана планета";
            break;
          }

          $content = array_map( 'trim', explode( "\n", trim( db_fetch_val( "SELECT top FROM planets_maps WHERE id = {$target['pid']}", 'top' ) ) ) );
          if( $content ) {
//            $content = array_map( 'trim', file( "./pages/environment/planets/{$target['pid']}.top" ) );
          } else {
            $out = "err=$qt&errtext=Неверно выбрана планета";
            break;
          }

          $closed = db_fetch_val( "SELECT status FROM defence WHERE user_id = {$user->uid} AND place_type = 1 AND place_id = ".$target['pid'], 'status' );
          if( $closed != 1 ) {
            $out = "err=$qt&errtext=Планета должна находится под вашим контролем в статусе \"Можно только мне\"";
            break;
          }

          $tcnt = db_fetch_val( "SELECT COUNT(*) cnt FROM planets_buildings pb WHERE pb.planet_id = {$target['pid']} AND pb.level < 10", 'cnt' );
          if( $tcnt == 0 ) {
            $out = "err=$qt&errtext=На планете нет построек для улучшения.";
            break;
          }

          $res = db_fetch_array( "SELECT o.id, o.name, SUM( ROUND( os.res_cnt / 4 * pb.level ) ) ncnt, IFNULL( w.object_cnt, 0 ) cnt
                                    FROM objects_sub os
                              INNER JOIN objects o ON o.id = os.res_id
                              INNER JOIN planets_buildings pb ON pb.object_id = os.object_id
                               LEFT JOIN warehouse w ON w.object_id = os.res_id AND place_id = {$target['pid']} AND place_type = 1
                                   WHERE pb.planet_id = {$target['pid']} AND pb.level < 10
                                GROUP BY o.id, o.name
                                ORDER BY o.name" );

          foreach( $res as $item ) {
            if( $item['cnt'] < $item['ncnt'] ) {
              $out = "err=$qt&errtext=Недостаточно {$item['name']} необходимо еще ".( $item['ncnt'] - $item['cnt'] );
              break 2;
            }
          }

          db_query( "INSERT INTO users_quests ( status, type, arg1, arg2, arg5, arg6, arg7, arg8 )
                                       VALUES ( {$result['status']}, $qt, $price, '$ptext', '$v0', '{$target['sname']}', $long, $tcnt )" );

          $event_id = mysql_insert_id();

          foreach( $res as $item ) {
            sub_warehouse_item( 1, $target['pid'], $item['id'], $item['ncnt'] );
            add_warehouse_item( 1, $target['pid'], $item['id'], $item['ncnt'], false, $event_id );
          }

          $map = db_fetch_array( "SELECT pb.x, pb.y, pb.level
                                    FROM planets_buildings pb
                                   WHERE pb.level < 10 AND pb.planet_id = {$target['pid']}
                                ORDER BY y, x" );
          $dst_map = '';
          $icnt = count( $content );

          for( $i=0; $i < $icnt; $i++ ) {
            $tcnt = strlen( trim( $content[ $i ] ) );
            for( $t=0; $t < $tcnt; $t++ ) {
              $bld = current( $map );
              if( $bld['x'] == $t && $bld['y'] == $i ) {
                next( $map );
                $dst_map .= $bld['level'];
              } else {
                $dst_map .= '0';
              }
            }
            $dst_map .= "\n";
          }

          db_query( "INSERT INTO u2u_quests (  event_id,      user_id,        to_user, type,   summ, currency, time_long, visibility,             arg0,       arg9 )
                                     VALUES ( $event_id, {$user->uid}, {$pers['uid']},  $qt, $price,    $conf,     $long,   $visible, {$target['pid']}, '$dst_map' )" );

          db_query( "INSERT INTO bay_log (user_id, log_text, summ, conf)
                     VALUES ( {$user->uid}, 'Bay upgrade +1 quest of $v0 for $price $ptext', $price, $conf )" );

          if( $conf == 1 ) {
            db_query( "UPDATE users u SET u.credits = u.credits - $price WHERE u.id = ".$user->uid );
          } else {
            db_query( "UPDATE users u SET u.money = u.money - $price WHERE u.id = ".$user->uid );
          }
          break;

        case 29: // Upgrade all +1
          $target = quest_field( $user, $result['type0'], $v0 );
          if( $target['err'] != 0 ) {
            $out = "err=$qt&errtext=Неверно выбрана планета";
            break;
          }

          $content = array_map( 'trim', explode( "\n", trim( db_fetch_val( "SELECT top FROM planets_maps WHERE id = {$target['pid']}", 'top' ) ) ) );
          if( $content ) {
//            $content = array_map( 'trim', file( "./pages/environment/planets/{$target['pid']}.top" ) );
          } else {
            $out = "err=$qt&errtext=Неверно выбрана планета";
            break;
          }

          $closed = db_fetch_val( "SELECT status FROM defence WHERE user_id = {$user->uid} AND place_type = 1 AND place_id = ".$target['pid'], 'status' );
          if( $closed != 1 ) {
            $out = "err=$qt&errtext=Планета должна находится под вашим контролем в статусе \"Можно только мне\"";
            break;
          }

          $tcnt = db_fetch_val( "SELECT COUNT(*) cnt FROM planets_buildings pb WHERE pb.planet_id = {$target['pid']} AND pb.level < 10", 'cnt' );
          if( $tcnt == 0 ) {
            $out = "err=$qt&errtext=На планете нет построек для улучшения.";
            break;
          }

          for( $l = 0; $l < 9; $l++ ) {
            $tmp = db_fetch_array( "SELECT o.id, o.name, SUM( ROUND( os.res_cnt / 4 * ( pb.level + $l ) ) ) ncnt, IFNULL( w.object_cnt, 0 ) cnt
                                          FROM objects_sub os
                                    INNER JOIN objects o ON o.id = os.res_id
                                    INNER JOIN planets_buildings pb ON pb.object_id = os.object_id
                                     LEFT JOIN warehouse w ON w.object_id = os.res_id AND place_id = {$target['pid']} AND place_type = 1
                                         WHERE pb.planet_id = {$target['pid']} AND pb.level < ( 10 - $l )
                                      GROUP BY o.id, o.name
                                      ORDER BY o.name" );
            foreach( $tmp as $item ) {
              if( isset( $res[$item['id']] ) ) {
                $res[$item['id']]['ncnt'] += $item['ncnt'];
              } else {
                $res[$item['id']]['id'] = $item['id'];
                $res[$item['id']]['ncnt'] = $item['ncnt'];
                $res[$item['id']]['name'] = $item['name'];
                $res[$item['id']]['cnt'] = $item['cnt'];
              }
            }
          }

          $err = '';
          foreach( $res as $item ) {
            if( $item['ncnt'] > $item['cnt'] ) {
              $err .= 'Недостаточно '.$item['name'].' необходимо еще '.( $item['ncnt'] - $item['cnt'] )."\n";
            }
          }

          if( $err ) {
            $out = "err=$qt&errtext=$err";
            break;
          }

          db_query( "INSERT INTO users_quests ( status, type, arg1, arg2, arg5, arg6, arg7, arg8 )
                                       VALUES ( {$result['status']}, $qt, $price, '$ptext', '$v0', '{$target['sname']}', $long, $tcnt )" );

          $event_id = mysql_insert_id();

          foreach( $res as $item ) {
            sub_warehouse_item( 1, $target['pid'], $item['id'], $item['ncnt'] );
            add_warehouse_item( 1, $target['pid'], $item['id'], $item['ncnt'], false, $event_id );
          }

          $map = db_fetch_array( "SELECT pb.x, pb.y, pb.level
                                    FROM planets_buildings pb
                                   WHERE pb.level < 10 AND pb.planet_id = {$target['pid']}
                                ORDER BY y, x" );
          $dst_map = '';
          $icnt = count( $content );

          for( $i=0; $i < $icnt; $i++ ) {
            $tcnt = strlen( trim( $content[ $i ] ) );
            for( $t=0; $t < $tcnt; $t++ ) {
              $bld = current( $map );
              if( $bld['x'] == $t && $bld['y'] == $i ) {
                next( $map );
                $dst_map .= $bld['level'];
              } else {
                $dst_map .= '0';
              }
            }
            $dst_map .= "\n";
          }

          db_query( "INSERT INTO u2u_quests (  event_id,      user_id,        to_user, type,   summ, currency, time_long, visibility,             arg0,       arg9 )
                                     VALUES ( $event_id, {$user->uid}, {$pers['uid']},  $qt, $price,    $conf,     $long,   $visible, {$target['pid']}, '$dst_map' )" );

          db_query( "INSERT INTO bay_log (user_id, log_text, summ, conf)
                     VALUES ( {$user->uid}, 'Bay upgrade +1 quest of $v0 for $price $ptext', $price, $conf )" );

          if( $conf == 1 ) {
            db_query( "UPDATE users u SET u.credits = u.credits - $price WHERE u.id = ".$user->uid );
          } else {
            db_query( "UPDATE users u SET u.money = u.money - $price WHERE u.id = ".$user->uid );
          }
          break;

        case 31: // Find colony
          $victim = quest_field( $user, $result['type0'], $v0 );

          if( $victim['err'] == 0 ) {

            db_query( "INSERT INTO users_quests (              status, type,  arg0,   arg1,     arg2,  arg3 )
                                         VALUES ( {$result['status']},  $qt, '$v0', $price, '$ptext', $long )" );

            $event_id = mysql_insert_id();
            db_query( "INSERT INTO u2u_quests (  event_id,      user_id,        to_user, type,   summ, currency, time_long, visibility,             arg0 )
                                       VALUES ( $event_id, {$user->uid}, {$pers['uid']},  $qt, $price,    $conf,     $long,   $visible, {$victim['uid']} )" );

            db_query( "INSERT INTO bay_log (user_id, log_text, summ, conf)
                       VALUES ( {$user->uid}, 'Bay find quest of $v0 for $price $ptext', $price, $conf )" );

            if( $conf == 1 ) {
              db_query( "UPDATE users u SET u.credits = u.credits - $price WHERE u.id = ".$user->uid );
            } else {
              db_query( "UPDATE users u SET u.money = u.money - $price WHERE u.id = ".$user->uid );
            }
          }
          break;

        case 33: // Duel
          $victim = quest_field( $user, $result['type0'], $v0 );

          if( $conf == 0 ) {
            $out = "err=$qt&errtext=Вызвать на дуэль можно только за конфедераты.";
            break;
          }

          if( floor( $price / 2 ) == 0 ) {
            $out = "err=$qt&errtext=Не достаточная сумма.";
            break;
          }

          if( $long < 2 ) {
            $out = "err=$qt&errtext=Время на сборы не может быть менее 2-х часов.";
            break;
          }

          if( $victim['err'] != 0 ) {
            $out = "err=$qt&errtext=".$victim['errtext'];
            break;
          }

          if( $victim['active'] == false ) {
            $out = "err=$qt&errtext=Оппонент должен присутствовать в эфире!";
            break;
          }

          $test = db_fetch_row( "SELECT sum( st.w_sum ) power, sum( s.shield ) shield
                                   FROM ships s
                             INNER JOIN ship_types st ON st.object_id = s.object_id
                                  WHERE s.shield > 0 AND s.user_id = ".$user->uid );

          if( $test['power'] < $v1 ) {
            $out = "err=$qt&errtext=У вас недостаточно кораблей что бы составить флот указанной силы.";
            break;
          }

          if( $test['shield'] < $v2 ) {
            $out = "err=$qt&errtext=У вас недостаточно кораблей что бы составить флот указанной защиты.";
            break;
          }

          $test = db_fetch_row( "SELECT sum( st.w_sum ) power, sum( s.shield ) shield
                                   FROM ships s
                             INNER JOIN ship_types st ON st.object_id = s.object_id
                                  WHERE s.shield > 0 AND s.user_id = ".$victim['uid'] );

          if( $test['power'] < $v1 ) {
            $out = "err=$qt&errtext=У аппонента недостаточно кораблей что бы составить флот указанной силы.";
            break;
          }

          if( $test['shield'] < $v2 ) {
            $out = "err=$qt&errtext=У аппонента недостаточно кораблей что бы составить флот указанной защиты.";
            break;
          }

          db_query( "INSERT INTO bay_log (user_id, log_text, summ, conf)
                     VALUES ( {$user->uid}, 'Bay duel with $v0 for $price $ptext', $price, $conf )" );

          db_query( "UPDATE users u SET u.credits = u.credits - $price WHERE u.id = ".$user->uid );

          $duel_place = db_fetch_row( "SELECT x, y FROM stars WHERE type = 4 ORDER BY rand() LIMIT 0,1" );

          $x = round( sin( mt_rand() / 100 ) * rand( 1100, 1200 ) );
          $y = round( cos( mt_rand() / 100 ) * rand( 1100, 1200 ) );
          db_query( "INSERT INTO users_quests (              status,          user_id, type,             arg0,  arg1, arg2, arg3, arg5, arg6,               arg7,               arg8 )
                                       VALUES (                   4, {$victim['uid']},  $qt, '{$user->login}', '$v0',  $v1,  $v2,   $x,   $y, {$duel_place['x']}, {$duel_place['y']} )" );

          $event_id = mysql_insert_id();

          $x = round( sin( mt_rand() / 100 ) * rand( 1100, 1200 ) );
          $y = round( cos( mt_rand() / 100 ) * rand( 1100, 1200 ) );
          db_query( "INSERT INTO users_quests (              status,          user_id, type,             arg0,  arg1, arg2, arg3,      arg4, arg5, arg6,               arg7,               arg8 )
                                       VALUES (                   4,     {$user->uid},   34, '{$user->login}', '$v0',  $v1,  $v2, $event_id,   $x,   $y, {$duel_place['x']}, {$duel_place['y']} )" );

          db_query( "INSERT INTO u2u_quests (  event_id,      user_id,          to_user, type,   summ, currency, date_start, time_long, visibility )
                                     VALUES ( $event_id, {$user->uid}, {$victim['uid']},  $qt, $price,    $conf,      NOW(),     $long,   $visible )" );

          send_msg( 1, $victim['uid'], "Вас вызвал на дуэль пилот {$user->login}, подготовьте флот силой не более $v1 и уровнем защиты не более $v2.", 7 );
          send_msg( 1, $user->uid, "Вы вызвали на дуэль пилота $v0, подготовьте флот силой не более $v1 и уровнем защиты не более $v2.", 7 );
          break;

        default:
          $out = 'err=3';
          break;
      }
    } else {
      $out = 'err=2';
    }

  } else {
    $out = 'err=1';
  }

  printOut( $out );
