<?php

  global $user;

  if( isset( $_GET['shid'] ) && is_numeric( substr( $_GET['shid'], 1 ) ) && isset( $_GET['mx'] ) && isset( $_GET['my'] ) ) {
    $type = substr( $_GET['shid'], 0, 1 );
    $shid = substr( $_GET['shid'], 1 );
    $x = intval( $_GET['mx'] );
    $y = intval( $_GET['my'] );

    if( $type == 'S' ) {
      $place = db_fetch_row( "SELECT st.planet, st.planet_cnt, s.place_id, s.place_type, s.arg1, s.arg2, st.harvest, s.upgrade_type, s.upgrade_level
                                FROM ships s,ship_types st
                               WHERE st.object_id = s.object_id AND id = $shid" );

      $fuel = db_fetch_row( "SELECT IFNULL( SUM(object_cnt), 0 ) cnt FROM warehouse WHERE object_id = 1019 AND place_type = 2 AND place_id = $shid" );
    } else {
      $place = db_fetch_row( "SELECT f.planet, f.planet_cnt, f.place_id, f.place_type, f.arg1, f.arg2, f.harvest, 0 upgrade_type, 0 upgrade_level
                                FROM fleets f
                               WHERE f.id = $shid" );

      $fuel = db_fetch_row( "SELECT IFNULL( SUM(w.object_cnt), 0 ) cnt FROM warehouse w, ships s WHERE w.object_id = 1019 AND s.fleet_id = $shid AND w.place_type = 2 AND w.place_id = s.id" );
    }

    if( !isset( $place['place_type'] ) || !isset( $place['place_id'] ) || $place['place_type'] == '' || $place['place_id'] == '' ) {
      printOut( "err=4" );
      return;
    }

    $xdiff = 340 - $x;
    $ydiff = 220 - $y;
    $len = round( sqrt( $xdiff * $xdiff + $ydiff * $ydiff ) );

    if( $len < 25 ) {
      printOut( "err=3" );
      return;
    }

    switch( $place['place_type'] ) {
      case 0:
        $planet = get_place_info( $place['place_id'], $place['place_type'] );
    
        $start = db_fetch_row( "SELECT orb, rad FROM planets WHERE id = ".$place['place_id'] );
        $radx = $start['orb'] * 2;
        $rady = $start['orb'] * 1.5;
        $start_x = round( 340 + sin( deg2rad( $start['rad'] ) ) * $radx / 2 );
        $start_y = round( 220 + cos( deg2rad( $start['rad'] ) ) * $rady / 2 );
    
        $xdiff = $start_x - $x;
        $ydiff = $start_y - $y;
        $len = round( sqrt( $xdiff * $xdiff + $ydiff * $ydiff ) );

        if( $place['upgrade_type'] == 1 ) {
          $time = time_to_str( get_pmove_time( $len, $place['planet'] ) - ( get_smove_time( $len, $place['planet'] ) / 50 * $place['upgrade_level'] ) );
        } else {
          $time = time_to_str( get_pmove_time( $len, $place['planet'] ) );
        }

        $fuel_need = round( $len/15 ) * $place['planet_cnt'];
        $fuel_need = $fuel_need - round( ( $fuel_need / 100 ) * get_book_level( 38, $user->uid ) );

        $radar = db_fetch_val( "SELECT IFNULL( SUM(st.radar), 0 ) radar
                                  FROM ships s, ship_types st
                                 WHERE st.object_id = s.object_id AND s.place_type = 7 AND s.place_id = ".$planet->place_id." AND s.user_id = ".$user->uid, 'radar' );

        if( $radar ) {
          $fleets = db_fetch_array( "SELECT DISTINCT f.arg1, f.arg2
                                       FROM fleets f
                                      WHERE ( f.cloak < $radar OR f.user_id = {$user->uid} ) AND f.place_type = 7 AND f.place_id = ".$planet->place_id );

          $ships = db_fetch_array( "SELECT DISTINCT s.arg1, s.arg2
                                      FROM ships s INNER JOIN ship_types st ON st.object_id = s.object_id
                                     WHERE ( st.cloak < $radar OR s.user_id = {$user->uid} ) AND s.fleet_id IS NULL AND s.place_type = 7 AND s.place_id = ".$planet->place_id );
        } else {
          $fleets = db_fetch_array( "SELECT DISTINCT f.arg1, f.arg2
                                       FROM fleets f
                                      WHERE f.place_type = 7 AND f.place_id = ".$planet->place_id." AND f.user_id = ".$user->uid );

          $ships = db_fetch_array( "SELECT DISTINCT s.arg1, s.arg2
                                      FROM ships s
                                     WHERE s.fleet_id IS NULL AND s.place_type = 7 AND s.place_id = ".$planet->place_id." AND s.user_id = ".$user->uid );
        }

        $points = array_merge( $fleets, $ships );
        $rinfo = '';
        foreach( $points as $item ) {
          $xdiff = $item['arg1'] - $x;
          $ydiff = $item['arg2'] - $y;
          $xlen = round( sqrt( $xdiff * $xdiff + $ydiff * $ydiff ) );
          if( $xlen <= 5 ) {
            $x = $item['arg1'];
            $y = $item['arg2'];
            
            if( $radar ) {
              $found = db_fetch_row( "SELECT count(*) cnt
                                        FROM ships s
                                  INNER JOIN ship_types st ON st.object_id = s.object_id
                                       WHERE ( st.cloak < $radar OR s.user_id = {$user->uid} ) AND s.place_type = 7 AND s.place_id = ".$planet->place_id." AND s.arg1 = $x AND s.arg2 = $y" );
              $rinfo = ' объектов '.$found['cnt'];
            }

            $xdiff = $start_x - $x;
            $ydiff = $start_y - $y;
            $len = round( sqrt( $xdiff * $xdiff + $ydiff * $ydiff ) );

            if( $place['upgrade_type'] == 1 ) {
              $time = time_to_str( get_pmove_time( $len, $place['planet'] ) - ( get_smove_time( $len, $place['planet'] ) / 50 * $place['upgrade_level'] ) );
            } else {
              $time = time_to_str( get_pmove_time( $len, $place['planet'] ) );
            }

            $fuel_need = round( $len/15 ) * $place['planet_cnt'];
            $fuel_need = $fuel_need - round( ( $fuel_need / 100 ) * get_book_level( 38, $user->uid ) );
          }
        }
        
        if( $fuel_need > $fuel['cnt'] ) {
          $out = "err=0&rx=$x&ry=$y&t=3&desc=Место назначения: точка $x:$y$rinfo<br>Время в пути: $time<br><font color=\"#FF0000\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
        } else {
          if( $fuel_need * 2 > $fuel['cnt'] ) {
            $out = "err=0&rx=$x&ry=$y&t=1&desc=Место назначения: точка $x:$y$rinfo<br>Время в пути: $time<br><font color=\"#FFFF00\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
          } else {
            $out = "err=0&rx=$x&ry=$y&t=1&desc=Место назначения: точка $x:$y$rinfo<br>Время в пути: $time<br><font color=\"#00FF00\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
          }
        }
    
        $result = db_fetch_array( "SELECT p.id, p.name, s.name sname, p.orb, p.rad, IFNULL( d.status, 0 ) status, d.user_id
                                     FROM planets p
                               INNER JOIN stars s ON s.id = p.star_id
                                LEFT JOIN defence d ON d.place_id = p.id AND d.place_type = 0 AND (
                                          ( d.status = 1 ) OR
                                          ( d.status = 2 AND (SELECT fe.user_id FROM foe fe WHERE fe.user_id = d.user_id AND fe.foe_id = {$user->uid}) is not null ) OR
                                          ( d.status = 3 AND (SELECT fr.user_id FROM friend fr WHERE fr.user_id = d.user_id AND fr.friend_id = {$user->uid}) is null ) OR
                                          ( d.status = 4 AND (SELECT u.id FROM users u WHERE u.id = d.user_id AND u.aliance = {$user->aliance}) is null ) )
                                    WHERE p.star_id = {$planet->place_id} ORDER BY p.planet_pos" );

        foreach( $result as $item ) {
          $radx = $item['orb'] * 2;
          $rady = $item['orb'] * 1.5;
    
          $planet_x = round( 340 + sin( deg2rad( $item['rad'] ) ) * $radx / 2 );
          $planet_y = round( 220 + cos( deg2rad( $item['rad'] ) ) * $rady / 2 );
    
          $xdiff = $planet_x - $x;
          $ydiff = $planet_y - $y;
          $len = round( sqrt( $xdiff * $xdiff + $ydiff * $ydiff ) );
    
          if( $len < 15 ) {
            $xdiff = $start_x - $planet_x;
            $ydiff = $start_y - $planet_y;
            $len = round( sqrt( $xdiff * $xdiff + $ydiff * $ydiff ) );

            if( $place['upgrade_type'] == 1 ) {
              $time = time_to_str( get_pmove_time( $len, $place['planet'] ) - ( get_smove_time( $len, $place['planet'] ) / 50 * $place['upgrade_level'] ) );
            } else {
              $time = time_to_str( get_pmove_time( $len, $place['planet'] ) );
            }

            $fuel_need = round( $len/15 ) * $place['planet_cnt'];
            $fuel_need = $fuel_need - round( ( $fuel_need / 100 ) * get_book_level( 38, $user->uid ) );

            if( $fuel_need > $fuel['cnt'] ) {
              $out = "err=0&rx=$planet_x&ry=$planet_y&t=3&desc=Место назначения: ".$item['name']."<br>Время в пути: $time<br><font color=\"#FF0000\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
            } else {

              $test_ships = db_fetch_row( "SELECT COUNT( s.id ) id, GROUP_CONCAT( DISTINCT IF( st.corsar = 0, s.user_id, 'corsar' ) SEPARATOR ',' ) users
                                             FROM ships s
                                       INNER JOIN ship_types st ON st.object_id = s.object_id
                                        LEFT JOIN users u ON u.id = s.user_id AND u.aliance = {$user->aliance}
                                        LEFT JOIN foe fe ON fe.user_id = s.user_id AND fe.foe_id = {$user->uid}
                                        LEFT JOIN friend fr ON fr.user_id = s.user_id AND fr.friend_id = {$user->uid}
                                            WHERE ( ( s.guard = 1 ) OR
                                                    ( s.guard = 2 AND fe.user_id is not null ) OR
                                                    ( s.guard = 3 AND fr.user_id is null ) OR
                                                    ( s.guard = 4 AND u.id is null )
                                                  ) AND s.fleet_id IS null AND s.user_id != ".$user->uid." AND s.place_type = 0 AND s.place_id = ".$item['id'] );

              $test_fleets = db_fetch_row( "SELECT COUNT( f.id ) id, GROUP_CONCAT( DISTINCT IF( ( SELECT MIN( st.corsar )
                                                             FROM ships s
                                                       INNER JOIN ship_types st ON st.object_id = s.object_id
                                                            WHERE s.fleet_id = f.id ) = 0, f.user_id, 'corsar' ) SEPARATOR ',' ) users
                                              FROM fleets f
                                         LEFT JOIN users u ON u.id = f.user_id AND u.aliance = {$user->aliance}
                                         LEFT JOIN foe fe ON fe.user_id = f.user_id AND fe.foe_id = {$user->uid}
                                         LEFT JOIN friend fr ON fr.user_id = f.user_id AND fr.friend_id = {$user->uid}
                                             WHERE ( ( f.guard = 1 ) OR
                                                     ( f.guard = 2 AND fe.user_id is not null ) OR
                                                     ( f.guard = 3 AND fr.user_id is null ) OR
                                                     ( f.guard = 4 AND u.id is null )
                                                   ) AND f.user_id != ".$user->uid." AND f.place_type = 0 AND f.place_id = ".$item['id'] );

              $attack = ( $item['status'] > 0 && $item['user_id'] != $user->uid ) || ( $test_ships['id'] > 0 ) || ( $test_fleets['id'] > 0 );

              if( $attack ) {
                $s_ships = explode( ',', $test_ships['users'] );
                $s_fleets = explode( ',', $test_fleets['users'] );
                $sec = '';
                $security = array();

                if( $item['user_id'] ) {
                  $security[ $item['user_id'] ] = 1;
                }

                if( is_array( $s_ships ) ) {
                  foreach( $s_ships as $u ) {
                    if( is_numeric( $u ) ) {
                      $security[ $u ] = 1;
                    } else {
                      $sec = 'Corsar';
                    }
                  }
                }

                if( is_array( $s_fleets ) ) {
                  foreach( $s_fleets as $u ) {
                    if( is_numeric( $u ) ) {
                      $security[ $u ] = 1;
                    } else {
                      $sec = 'Corsar';
                    }
                  }
                }

                unset( $security[null] );
                if( count( $security ) ) {
                  if( $user->qt == 31 ) {
                    $quest = db_fetch_row( "SELECT u2.user_id, u2.arg0 uid, uq.arg0 uname, uq.arg1, uq.arg2, u2.currency, u2.summ
                                              FROM u2u_quests u2
                                        INNER JOIN users_quests uq ON uq.id = u2.event_id
                                             WHERE u2.event_id = {$user->iq}" );

                    if( isset( $security[$quest['uid']] ) ) {
                      send_msg( 1, $user->uid, "Задание выполненно, вы получаете вознаграждение в {$quest['arg1']} {$quest['arg2']}", 7 );
                      send_msg( 1, $quest['user_id'], "Ваше задание по поиску колоний пилота \"{$quest['uname']}\" выполнено! Колония {$item['name']} находится в системе {$item['sname']}.", 7 );

                      if( $quest['currency'] == 1 ) {
                        db_query( "UPDATE users u SET u.donate = u.donate + {$quest['summ']}, u.credits = u.credits + {$quest['summ']} WHERE u.id = {$user->uid}" );
                      } else {
                        db_query( "UPDATE users u SET u.money = u.money + {$quest['summ']} WHERE u.id = {$user->uid}" );
                      }

                      db_query( "UPDATE users_quests SET status = status - 1 WHERE id = ".$user->iq );
                    }
                  }

                  $users = implode( ',', array_keys( $security ) );
                  $sec = db_fetch_val( "SELECT GROUP_CONCAT( DISTINCT login SEPARATOR ',' ) logins FROM users WHERE id IN( $users )", 'logins' );
                } else {
                  $sec = 'нет данных';
                }

                if( $fuel_need * 2 > $fuel['cnt'] ) {
                  $out = "err=0&rx=$planet_x&ry=$planet_y&t=2&desc=<font color=\"#FF0000\">Атаковать орбиту: ".$item['name']." ($sec)</font><br>Время в пути: $time<br><font color=\"#FFFF00\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
                } else {
                  $out = "err=0&rx=$planet_x&ry=$planet_y&t=2&desc=<font color=\"#FF0000\">Атаковать орбиту: ".$item['name']." ($sec)</font><br>Время в пути: $time<br><font color=\"#00FF00\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
                }
              } else {
                if( $fuel_need * 2 > $fuel['cnt'] ) {
                  $out = "err=0&rx=$planet_x&ry=$planet_y&t=2&desc=Место назначения: ".$item['name']."<br>Время в пути: $time<br><font color=\"#FFFF00\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
                } else {
                  $out = "err=0&rx=$planet_x&ry=$planet_y&t=2&desc=Место назначения: ".$item['name']."<br>Время в пути: $time<br><font color=\"#00FF00\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
                }
              }
            }
          }
        }
        break;

      case 7:
        $start_x = $place['arg1'];
        $start_y = $place['arg2'];
    
        $xdiff = $start_x - $x;
        $ydiff = $start_y - $y;
        $len = round( sqrt( $xdiff * $xdiff + $ydiff * $ydiff ) );

        if( $place['upgrade_type'] == 1 ) {
          $time = time_to_str( get_pmove_time( $len, $place['planet'] ) - ( get_smove_time( $len, $place['planet'] ) / 50 * $place['upgrade_level'] ) );
        } else {
          $time = time_to_str( get_pmove_time( $len, $place['planet'] ) );
        }

        $fuel_need = round( $len/15 ) * $place['planet_cnt'];
        $fuel_need = $fuel_need - round( ( $fuel_need / 100 ) * get_book_level( 38, $user->uid ) );

        $radar = db_fetch_val( "SELECT IFNULL( SUM(st.radar), 0 ) radar FROM ships s, ship_types st
                                 WHERE st.object_id = s.object_id AND s.place_type = 7 AND s.place_id = ".$place['place_id']." AND s.user_id = ".$user->uid, 'radar' );

        if( $radar ) {
          $fleets = db_fetch_array( "SELECT DISTINCT f.arg1, f.arg2
                                       FROM fleets f
                                      WHERE ( f.cloak < $radar OR f.user_id = {$user->uid} ) AND f.place_type = 7 AND f.place_id = ".$place['place_id'] );

          $ships = db_fetch_array( "SELECT DISTINCT s.arg1, s.arg2
                                      FROM ships s INNER JOIN ship_types st ON st.object_id = s.object_id
                                     WHERE ( st.cloak < $radar OR s.user_id = {$user->uid} ) AND s.fleet_id IS NULL AND s.place_type = 7 AND s.place_id = ".$place['place_id'] );
        } else {
          $fleets = db_fetch_array( "SELECT DISTINCT f.arg1, f.arg2
                                       FROM fleets f
                                      WHERE f.place_type = 7 AND f.place_id = ".$place['place_id']." AND f.user_id = ".$user->uid );

          $ships = db_fetch_array( "SELECT DISTINCT s.arg1, s.arg2
                                      FROM ships s
                                     WHERE s.fleet_id IS NULL AND s.place_type = 7 AND s.place_id = ".$place['place_id']." AND s.user_id = ".$user->uid );
        }

        if( $place['harvest'] ) {
          $trash = db_fetch_array( "SELECT DISTINCT t.arg1, t.arg2
                                      FROM trash t
                                     WHERE t.place_type = 7 AND t.place_id = ".$place['place_id'] );
        } else {
          $trash = array();
        }

        $points = array_merge( $fleets, $ships, $trash );
        $rinfo = '';
        foreach( $points as $item ) {
          $xdiff = $item['arg1'] - $x;
          $ydiff = $item['arg2'] - $y;
          $len = round( sqrt( $xdiff * $xdiff + $ydiff * $ydiff ) );
          if( $len <= 5 ) {
            $x = $item['arg1'];
            $y = $item['arg2'];

            if( $radar ) {
              $found = db_fetch_row( "SELECT count(*) cnt 
                                        FROM ships s
                                  INNER JOIN ship_types st ON st.object_id = s.object_id
                                       WHERE ( st.cloak < $radar OR s.user_id = {$user->uid} ) AND s.place_type = 7 AND s.place_id = ".$place['place_id']." AND s.arg1 = $x AND s.arg2 = $y" );

              $rinfo = ' объектов '.$found['cnt'];
            }

            $xdiff = $start_x - $x;
            $ydiff = $start_y - $y;
            $len = round( sqrt( $xdiff * $xdiff + $ydiff * $ydiff ) );

            if( $place['upgrade_type'] == 1 ) {
              $time = time_to_str( get_pmove_time( $len, $place['planet'] ) - ( get_smove_time( $len, $place['planet'] ) / 50 * $place['upgrade_level'] ) );
            } else {
              $time = time_to_str( get_pmove_time( $len, $place['planet'] ) );
            }

            $fuel_need = round( $len/15 ) * $place['planet_cnt'];
          }
        }

        if( $fuel_need > $fuel['cnt'] ) {
          $out = "err=0&rx=$x&ry=$y&t=3&desc=Место назначения: точка $x:$y$rinfo<br>Время в пути: $time<br><font color=\"#FF0000\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
        } else {
          if( $fuel_need * 2 > $fuel['cnt'] ) {
            $out = "err=0&rx=$x&ry=$y&t=1&desc=Место назначения: точка $x:$y$rinfo<br>Время в пути: $time<br><font color=\"#FFFF00\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
          } else {
            $out = "err=0&rx=$x&ry=$y&t=1&desc=Место назначения: точка $x:$y$rinfo<br>Время в пути: $time<br><font color=\"#00FF00\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
          }
        }
    
        $result = db_fetch_array( "SELECT p.id, p.name, s.name sname, p.orb, p.rad, IFNULL( d.status, 0 ) status, d.user_id
                                     FROM planets p
                               INNER JOIN stars s ON s.id = p.star_id
                                LEFT JOIN defence d ON d.place_id = p.id AND d.place_type = 0 AND (
                                          ( d.status = 1 ) OR
                                          ( d.status = 2 AND (SELECT fe.user_id FROM foe fe WHERE fe.user_id = d.user_id AND fe.foe_id = {$user->uid}) is not null ) OR
                                          ( d.status = 3 AND (SELECT fr.user_id FROM friend fr WHERE fr.user_id = d.user_id AND fr.friend_id = {$user->uid}) is null ) OR
                                          ( d.status = 4 AND (SELECT u.id FROM users u WHERE u.id = d.user_id AND u.aliance = {$user->aliance}) is null ) )
                                    WHERE p.star_id = {$place['place_id']} ORDER BY p.planet_pos" );
        foreach( $result as $item ) {
          $radx = $item['orb'] * 2;
          $rady = $item['orb'] * 1.5;
    
          $planet_x = round( 340 + sin( deg2rad( $item['rad'] ) ) * $radx / 2 );
          $planet_y = round( 220 + cos( deg2rad( $item['rad'] ) ) * $rady / 2 );
    
          $xdiff = $planet_x - $x;
          $ydiff = $planet_y - $y;
          $len = round( sqrt( $xdiff * $xdiff + $ydiff * $ydiff ) );
    
          if( $len < 15 ) {
            $xdiff = $start_x - $planet_x;
            $ydiff = $start_y - $planet_y;
            $len = round( sqrt( $xdiff * $xdiff + $ydiff * $ydiff ) );

            if( $place['upgrade_type'] == 1 ) {
              $time = time_to_str( get_pmove_time( $len, $place['planet'] ) - ( get_smove_time( $len, $place['planet'] ) / 50 * $place['upgrade_level'] ) );
            } else {
              $time = time_to_str( get_pmove_time( $len, $place['planet'] ) );
            }

            $fuel_need = round( $len/15 ) * $place['planet_cnt'];
            $fuel_need = $fuel_need - round( ( $fuel_need / 100 ) * get_book_level( 38, $user->uid ) );
    
            if( $fuel_need > $fuel['cnt'] ) {
              $out = "err=0&rx=$planet_x&ry=$planet_y&t=3&desc=Место назначения: ".$item['name']."<br>Время в пути: $time<br><font color=\"#FF0000\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
            } else {
              $test_ships = db_fetch_row( "SELECT COUNT( s.id ) id, GROUP_CONCAT( DISTINCT IF( st.corsar = 0, s.user_id, 'corsar' ) SEPARATOR ',' ) users
                                             FROM ships s
                                       INNER JOIN ship_types st ON st.object_id = s.object_id
                                        LEFT JOIN users u ON u.id = s.user_id AND u.aliance = {$user->aliance}
                                        LEFT JOIN foe fe ON fe.user_id = s.user_id AND fe.foe_id = {$user->uid}
                                        LEFT JOIN friend fr ON fr.user_id = s.user_id AND fr.friend_id = {$user->uid}
                                            WHERE ( ( s.guard = 1 ) OR
                                                    ( s.guard = 2 AND fe.user_id is not null ) OR
                                                    ( s.guard = 3 AND fr.user_id is null ) OR
                                                    ( s.guard = 4 AND u.id is null )
                                                  ) AND s.user_id != ".$user->uid." AND s.place_type = 0 AND s.place_id = ".$item['id'] );

              $test_fleets = db_fetch_row( "SELECT COUNT( f.id ) id, GROUP_CONCAT( DISTINCT IF( ( SELECT MIN( st.corsar )
                                                             FROM ships s
                                                       INNER JOIN ship_types st ON st.object_id = s.object_id
                                                            WHERE s.fleet_id = f.id ) = 0, f.user_id, 'corsar' ) SEPARATOR ',' ) users
                                              FROM fleets f
                                         LEFT JOIN users u ON u.id = f.user_id AND u.aliance = {$user->aliance}
                                         LEFT JOIN foe fe ON fe.user_id = f.user_id AND fe.foe_id = {$user->uid}
                                         LEFT JOIN friend fr ON fr.user_id = f.user_id AND fr.friend_id = {$user->uid}
                                             WHERE ( ( f.guard = 1 ) OR
                                                     ( f.guard = 2 AND fe.user_id is not null ) OR
                                                     ( f.guard = 3 AND fr.user_id is null ) OR
                                                     ( f.guard = 4 AND u.id is null )
                                                   ) AND f.user_id != ".$user->uid." AND f.place_type = 0 AND f.place_id = ".$item['id'] );

              $attack = ( $item['status'] > 0 && $item['user_id'] != $user->uid ) || ( $test_ships['id'] > 0 ) || ( $test_fleets['id'] > 0 );

              if( $attack ) {
                $s_ships = explode( ',', $test_ships['users'] );
                $s_fleets = explode( ',', $test_fleets['users'] );
                $sec = '';
                $security = array();

                if( $item['user_id'] ) {
                  $security[ $item['user_id'] ] = 1;
                }

                if( is_array( $s_ships ) ) {
                  foreach( $s_ships as $u ) {
                    if( is_numeric( $u ) ) {
                      $security[ $u ] = 1;
                    } else {
                      $sec = 'Corsar';
                    }
                  }
                }

                if( is_array( $s_fleets ) ) {
                  foreach( $s_fleets as $u ) {
                    if( is_numeric( $u ) ) {
                      $security[ $u ] = 1;
                    } else {
                      $sec = 'Corsar';
                    }
                  }
                }

                unset( $security[null] );
                if( count( $security ) ) {
                  if( $user->qt == 31 ) {
                    $quest = db_fetch_row( "SELECT u2.user_id, u2.arg0 uid, uq.arg0 uname, uq.arg1, uq.arg2, u2.currency, u2.summ
                                              FROM u2u_quests u2
                                        INNER JOIN users_quests uq ON uq.id = u2.event_id
                                             WHERE u2.event_id = {$user->iq}" );

                    if( isset( $security[$quest['uid']] ) ) {
                      send_msg( 1, $user->uid, "Задание выполненно, вы получаете вознаграждение в {$quest['arg1']} {$quest['arg2']}", 7 );
                      send_msg( 1, $quest['user_id'], "Ваше задание по поиску колоний пилота \"{$quest['uname']}\" выполнено! Колония {$item['name']} находится в системе {$item['sname']}.", 7 );

                      if( $quest['currency'] == 1 ) {
                        db_query( "UPDATE users u SET u.donate = u.donate + {$quest['summ']}, u.credits = u.credits + {$quest['summ']} WHERE u.id = {$user->uid}" );
                      } else {
                        db_query( "UPDATE users u SET u.money = u.money + {$quest['summ']} WHERE u.id = {$user->uid}" );
                      }

                      db_query( "UPDATE users_quests SET status = status - 1 WHERE id = ".$user->iq );
                    }
                  }

                  $users = implode( ',', array_keys( $security ) );
                  $sec = db_fetch_val( "SELECT GROUP_CONCAT( DISTINCT login SEPARATOR ',' ) logins FROM users WHERE id IN( $users )", 'logins' );
                } else {
                  $sec = 'нет данных';
                }

                $out = "err=0&rx=$planet_x&ry=$planet_y&t=2&desc=<font color=\"#FF0000\">Атаковать орбиту: ".$item['name']." ($sec)</font><br>Время в пути: $time<br><font color=\"#00FF00\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
              } else {
                if( $fuel_need > $fuel['cnt'] ) {
                  $out = "err=0&rx=$planet_x&ry=$planet_y&t=3&desc=Место назначения: ".$item['name']."<br>Время в пути: $time<br><font color=\"#FF0000\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
                } else {
                  if( $fuel_need * 2 > $fuel['cnt'] ) {
                    $out = "err=0&rx=$planet_x&ry=$planet_y&t=2&desc=Место назначения: ".$item['name']."<br>Время в пути: $time<br><font color=\"#FFFF00\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
                  } else {
                    $out = "err=0&rx=$planet_x&ry=$planet_y&t=2&desc=Место назначения: ".$item['name']."<br>Время в пути: $time<br><font color=\"#00FF00\">Необходимо водорода: ".$fuel_need." (".$fuel['cnt'].")";
                  }
                }
              }
            }
          }
        }
        break;

      default:
        $out = "err=2";
        break;
    }
    printOut( $out );
  } else {
    printOut( "err=1" );
  }