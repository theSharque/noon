<?php

  global $user;

  if( $user->place_type == 0 && isset( $_GET['x'] ) && isset( $_GET['oid'] ) && $user->owner ) {
    $planet_id = $user->place_id;

    $x = $_GET['x'];
    $y = 0;
    $oid = $_GET['oid'];

    if( isset( $_GET['count'] ) ) {
      $cycle = abs( $_GET['count'] );
    }

    if( !$cycle ) {
      $cycle = 1;
    }

    db_safe( $x );
    db_safe( $oid );
    db_safe( $cycle );

    $last = $_GET['l'];
    db_safe( $last );
/*
    $test = db_fetch_val( "SELECT last FROM antibot WHERE coord = ".($y*30+$x)." AND user_id=".$user->uid, 'last' );
    if( $test != $last ) {
//      debug_it( 'Found make bot from '.$user->login );
      return;
    }
*/
    $info = get_orbit_info( $x );

    if( $cycle > $info->level ) {
      $cycle = $info->level;
    }

    $items = db_fetch_array( "SELECT o.id, o.class, os.res_cnt, IFNULL( w.object_cnt, 0 ) object_cnt
                                FROM objects_sub os
                          INNER JOIN objects o ON o.id = os.res_id AND o.class IN( 1, 2, 6, 7 )
                           LEFT JOIN warehouse w ON w.object_id = o.id AND w.place_id = {$planet_id} AND w.place_type = 0
                               WHERE os.object_id = $oid" );

    $can_build = ( get_energy() >= 0 );
    foreach( $items as $item ) {
      if( $item['res_cnt'] > $item['object_cnt'] ) {
        $can_build = false;
      }
    }
    if( $can_build && $info->busy == 0 && $info->building == 3005 && $info->level >= $cycle ) {
      foreach( $items as $item ) {
        if( $item['class'] == 1 || $item['class'] == 2 ) {
          sub_warehouse_item( 0, $planet_id, $item['id'], $item['res_cnt'] );
        }
      }
  
      $total_time = get_make_time( $oid );
      db_query( "INSERT INTO orbit_events ( event_type, x, planet_id, object_id, event_time, timer, user_id )
                                    VALUES ( 5, $x, $planet_id, 3005, DATE_ADD( NOW(), INTERVAL $total_time SECOND ), $total_time, {$user->uid} )" );
      $id = mysql_insert_id();
      db_query( "UPDATE orbits_buildings SET last_id = $oid, last_cyc = $cycle WHERE x = $x AND planet_id = $planet_id AND object_id = 3005" );

      if( isset( $_GET['robot'] ) && is_numeric( $_GET['robot'] ) && $_GET['robot'] == 1 ) {
        $rob = db_fetch_row( "SELECT id FROM robots r WHERE r.status = 0 AND r.user_id = ".$user->uid." AND
                              r.usedtime = (SELECT MIN(usedtime) mintime FROM robots WHERE status = 0 AND user_id = ".$user->uid.")" );

        $build = db_fetch_row( "SELECT id FROM orbits_buildings WHERE x = $x AND planet_id = $planet_id AND object_id = 3005" );

        db_query( "UPDATE robots SET status = 1, build_id = ".$build['id'].", build_type = 0 WHERE id = ".$rob['id'] );
        $cycle = -1;
      }

      db_query( "INSERT INTO orbits_make ( event_id, object_id, cycle ) VALUES ( $id, $oid, $cycle )" );

      printOut( "err=0" );
      return;
    }
    printOut( "err=1" );
  }

  if( $user->place_type == 1 && isset( $_GET['x'] ) && isset( $_GET['y'] ) && isset( $_GET['oid'] ) && $user->owner ) {
    $planet_id = $user->place_id;

    $x = $_GET['x'];
    $y = $_GET['y'];
    $oid = $_GET['oid'];

    if( isset( $_GET['count'] ) ) {
      $cycle = abs( $_GET['count'] );
    }

    if( !$cycle ) {
      $cycle = 1;
    }

    $last = $_GET['l'];
    db_safe( $last );
/*
    $test = db_fetch_val( "SELECT last FROM antibot WHERE coord = ".($y*30+$x)." AND user_id=".$user->uid, 'last' );
    if( $test != $last ) {
//      debug_it( 'Found make bot from '.$user->login );
      return;
    }
*/
    db_safe( $x );
    db_safe( $y );
    db_safe( $oid );
    db_safe( $cycle );

    $info = get_planet_info( $x, $y );
    if( $cycle > $info->level ) {
      $cycle = $info->level;
    }

    $items = db_fetch_array( "SELECT o.id, o.class, os.res_cnt, IFNULL( w.object_cnt, 0 ) object_cnt
                                FROM objects_sub os
                          INNER JOIN objects o ON o.id = os.res_id AND o.class IN( 1, 2, 6, 7 )
                           LEFT JOIN warehouse w ON w.object_id = o.id AND w.place_id = {$planet_id} AND w.place_type = 1
                               WHERE os.object_id = $oid" );

    $can_build = ( get_energy() >= 0 );
    foreach( $items as $item ) {
      if( $item['res_cnt'] > $item['object_cnt'] ) {
        $can_build = false;
      }
    }
    if( $can_build && $info->busy == 0 && $info->building == 33 && $info->level >= $cycle ) {
      foreach( $items as $item ) {
        if( $item['class'] == 1 || $item['class'] == 2 ) {
          sub_warehouse_item( 1, $planet_id, $item['id'], $item['res_cnt'] );
        }
      }
  
      $total_time = get_make_time( $oid );
      db_query( "INSERT INTO planet_events ( event_type, x, y, planet_id, object_id, event_time, timer, user_id )
                                    VALUES ( 5, $x, $y, $planet_id, 33, DATE_ADD( NOW(), INTERVAL $total_time SECOND ), $total_time, {$user->uid} )" );
      $id = mysql_insert_id();
      db_query( "UPDATE planets_buildings SET last_id = $oid, last_cyc = $cycle WHERE x = $x AND y = $y AND planet_id = $planet_id AND object_id = 33" );

      if( isset( $_GET['robot'] ) && is_numeric( $_GET['robot'] ) && $_GET['robot'] == 1 ) {
        $rob = db_fetch_row( "SELECT id FROM robots r WHERE r.status = 0 AND r.user_id = ".$user->uid." AND
                              r.usedtime = (SELECT MIN(usedtime) mintime FROM robots WHERE status = 0 AND user_id = ".$user->uid.")" );

        $build = db_fetch_row( "SELECT id FROM planets_buildings WHERE x = $x AND y = $y AND planet_id = $planet_id AND object_id = 33" );

        db_query( "UPDATE robots SET status = 1, build_id = ".$build['id'].", build_type = 1 WHERE id = ".$rob['id'] );
        $cycle = -1;
      }
      db_query( "INSERT INTO planets_make ( event_id, object_id, cycle ) VALUES ( $id, $oid, $cycle )" );

      printOut( "err=0" );
      return;
    }
    printOut( "err=1" );
  }
  printOut( "err=2" );
